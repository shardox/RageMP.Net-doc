{
  "api/AlternateLife.RageMP.Net.Scripting.VehicleTrailerAttachedDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.VehicleTrailerAttachedDelegate.html",
    "title": "Delegate VehicleTrailerAttachedDelegate",
    "keywords": "Delegate VehicleTrailerAttachedDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task VehicleTrailerAttachedDelegate(IVehicle vehicle, IVehicle trailer); Parameters Type Name Description IVehicle vehicle IVehicle trailer Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Enums.ClothSlot.html": {
    "href": "api/AlternateLife.RageMP.Net.Enums.ClothSlot.html",
    "title": "Enum ClothSlot",
    "keywords": "Enum ClothSlot Namespace : AlternateLife.RageMP.Net.Enums Assembly : AlternateLife.RageMP.Net.dll Syntax public enum ClothSlot : int Fields Name Description Accessory Bags BodyArmor Decals Feet Hair Legs Mask Tops Torso Undershirt"
  },
  "api/AlternateLife.RageMP.Net.Data.HeadBlendData.html": {
    "href": "api/AlternateLife.RageMP.Net.Data.HeadBlendData.html",
    "title": "Struct HeadBlendData",
    "keywords": "Struct HeadBlendData Namespace : AlternateLife.RageMP.Net.Data Assembly : AlternateLife.RageMP.Net.dll Syntax public struct HeadBlendData Constructors | Improve this Doc View Source HeadBlendData(Byte, Byte, Byte, Byte, Byte, Byte, Single, Single, Single) Declaration public HeadBlendData(byte shapeFirst, byte shapeSecond, byte shapeThird, byte skinFirst, byte skinSecond, byte skinThird, float shapeMix, float skinMix, float thirdMix) Parameters Type Name Description System.Byte shapeFirst System.Byte shapeSecond System.Byte shapeThird System.Byte skinFirst System.Byte skinSecond System.Byte skinThird System.Single shapeMix System.Single skinMix System.Single thirdMix Fields | Improve this Doc View Source Shape Declaration public readonly byte[] Shape Field Value Type Description System.Byte [] | Improve this Doc View Source ShapeMix Declaration public readonly float ShapeMix Field Value Type Description System.Single | Improve this Doc View Source Skin Declaration public readonly byte[] Skin Field Value Type Description System.Byte [] | Improve this Doc View Source SkinMix Declaration public readonly float SkinMix Field Value Type Description System.Single | Improve this Doc View Source ThirdMix Declaration public readonly float ThirdMix Field Value Type Description System.Single"
  },
  "api/AlternateLife.RageMP.Net.Scripting.EntityDestroyedDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.EntityDestroyedDelegate.html",
    "title": "Delegate EntityDestroyedDelegate",
    "keywords": "Delegate EntityDestroyedDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task EntityDestroyedDelegate(IEntity entity); Parameters Type Name Description IEntity entity Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Interfaces.IPool-1.html": {
    "href": "api/AlternateLife.RageMP.Net.Interfaces.IPool-1.html",
    "title": "Interface IPool<T>",
    "keywords": "Interface IPool<T> Namespace : AlternateLife.RageMP.Net.Interfaces Assembly : AlternateLife.RageMP.Net.dll Syntax public interface IPool<T> : IReadOnlyList<T> where T : IEntity Type Parameters Name Description T Properties | Improve this Doc View Source Item[UInt32] Get entity with given entity id. Declaration T this[uint index] { get; } Parameters Type Name Description System.UInt32 index Entity id to search for Property Value Type Description T if found, otherwise null Methods | Improve this Doc View Source GetAt(Int32) Get entity with given entity id. Declaration T GetAt(int index) Parameters Type Name Description System.Int32 index Entity id to search for Returns Type Description T if found, otherwise null | Improve this Doc View Source GetAt(UInt32) Get entity with given entity id. Declaration T GetAt(uint index) Parameters Type Name Description System.UInt32 index Entity id to search for Returns Type Description T if found, otherwise null | Improve this Doc View Source GetInDimensionAsync(UInt32) Get a list of entities in given dimension. Declaration Task<IReadOnlyCollection<T>> GetInDimensionAsync(uint dimension) Parameters Type Name Description System.UInt32 dimension Dimension to search entities in Returns Type Description Task < IReadOnlyCollection <T>> List of found | Improve this Doc View Source GetInRangeAsync(Vector3, Single, UInt32) Get a list of entities at given position. Declaration Task<IReadOnlyCollection<T>> GetInRangeAsync(Vector3 position, float range, uint dimension = null) Parameters Type Name Description Vector3 position Position to search entities at System.Single range Range to search entities in System.UInt32 dimension Dimension to search entities in Returns Type Description Task < IReadOnlyCollection <T>> List of found"
  },
  "api/AlternateLife.RageMP.Net.Data.ClothData.html": {
    "href": "api/AlternateLife.RageMP.Net.Data.ClothData.html",
    "title": "Struct ClothData",
    "keywords": "Struct ClothData Namespace : AlternateLife.RageMP.Net.Data Assembly : AlternateLife.RageMP.Net.dll Syntax public struct ClothData Constructors | Improve this Doc View Source ClothData(Byte, Byte, Byte) Declaration public ClothData(byte drawable, byte texture, byte palette) Parameters Type Name Description System.Byte drawable System.Byte texture System.Byte palette Fields | Improve this Doc View Source Drawable Declaration public readonly byte Drawable Field Value Type Description System.Byte | Improve this Doc View Source Palette Declaration public readonly byte Palette Field Value Type Description System.Byte | Improve this Doc View Source Texture Declaration public readonly byte Texture Field Value Type Description System.Byte"
  },
  "api/AlternateLife.RageMP.Net.Scripting.PlayerQuitDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.PlayerQuitDelegate.html",
    "title": "Delegate PlayerQuitDelegate",
    "keywords": "Delegate PlayerQuitDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate void PlayerQuitDelegate(IPlayer player, DisconnectReason type, string reason); Parameters Type Name Description IPlayer player DisconnectReason type System.String reason"
  },
  "api/AlternateLife.RageMP.Net.Scripting.PlayerExitVehicleDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.PlayerExitVehicleDelegate.html",
    "title": "Delegate PlayerExitVehicleDelegate",
    "keywords": "Delegate PlayerExitVehicleDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task PlayerExitVehicleDelegate(IPlayer player, IVehicle vehicle); Parameters Type Name Description IPlayer player IVehicle vehicle Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Data.PropData.html": {
    "href": "api/AlternateLife.RageMP.Net.Data.PropData.html",
    "title": "Struct PropData",
    "keywords": "Struct PropData Namespace : AlternateLife.RageMP.Net.Data Assembly : AlternateLife.RageMP.Net.dll Syntax public struct PropData Constructors | Improve this Doc View Source PropData(Byte, Byte) Declaration public PropData(byte drawable, byte texture) Parameters Type Name Description System.Byte drawable System.Byte texture Fields | Improve this Doc View Source Drawable Declaration public readonly byte Drawable Field Value Type Description System.Byte | Improve this Doc View Source Texture Declaration public readonly byte Texture Field Value Type Description System.Byte"
  },
  "api/AlternateLife.RageMP.Net.Scripting.PlayerExitColshapeDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.PlayerExitColshapeDelegate.html",
    "title": "Delegate PlayerExitColshapeDelegate",
    "keywords": "Delegate PlayerExitColshapeDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task PlayerExitColshapeDelegate(IPlayer player, IColshape colshapePointer); Parameters Type Name Description IPlayer player IColshape colshapePointer Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Scripting.PlayerExitCheckpointDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.PlayerExitCheckpointDelegate.html",
    "title": "Delegate PlayerExitCheckpointDelegate",
    "keywords": "Delegate PlayerExitCheckpointDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task PlayerExitCheckpointDelegate(IPlayer player, ICheckpoint checkpointPointer); Parameters Type Name Description IPlayer player ICheckpoint checkpointPointer Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Scripting.MP.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.MP.html",
    "title": "Class MP",
    "keywords": "Class MP Inheritance System.Object MP Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public static class MP : object Fields | Improve this Doc View Source GlobalDimension Declaration public const uint GlobalDimension = null Field Value Type Description System.UInt32 Properties | Improve this Doc View Source Blips Declaration public static IBlipPool Blips { get; } Property Value Type Description IBlipPool | Improve this Doc View Source Checkpoints Declaration public static ICheckpointPool Checkpoints { get; } Property Value Type Description ICheckpointPool | Improve this Doc View Source Colshapes Declaration public static IColshapePool Colshapes { get; } Property Value Type Description IColshapePool | Improve this Doc View Source Commands Declaration public static ICommands Commands { get; } Property Value Type Description ICommands | Improve this Doc View Source Config Declaration public static IConfig Config { get; } Property Value Type Description IConfig | Improve this Doc View Source Events Declaration public static IEventScripting Events { get; } Property Value Type Description IEventScripting | Improve this Doc View Source Logger Declaration public static ILogger Logger { get; } Property Value Type Description ILogger | Improve this Doc View Source Markers Declaration public static IMarkerPool Markers { get; } Property Value Type Description IMarkerPool | Improve this Doc View Source Objects Declaration public static IObjectPool Objects { get; } Property Value Type Description IObjectPool | Improve this Doc View Source Players Declaration public static IPlayerPool Players { get; } Property Value Type Description IPlayerPool | Improve this Doc View Source TextLabels Declaration public static ITextLabelPool TextLabels { get; } Property Value Type Description ITextLabelPool | Improve this Doc View Source Vehicles Declaration public static IVehiclePool Vehicles { get; } Property Value Type Description IVehiclePool | Improve this Doc View Source World Declaration public static IWorld World { get; } Property Value Type Description IWorld Methods | Improve this Doc View Source Joaat(IList<String>) Converts given collection of strings to Jenkins-One-At-A-Time values. https://en.wikipedia.org/wiki/Jenkins_hash_function#one_at_a_time Declaration public static IList<uint> Joaat(IList<string> input) Parameters Type Name Description IList < System.String > input texts to convert Returns Type Description IList < System.UInt32 > Collection of converted values | Improve this Doc View Source Joaat(String) Converts given string to the equivalent Jenkins-One-At-A-Time value. https://en.wikipedia.org/wiki/Jenkins_hash_function#one_at_a_time Declaration public static uint Joaat(string data) Parameters Type Name Description System.String data text to convert Returns Type Description System.UInt32 Integer that represents given string data | Improve this Doc View Source Schedule(Action, Boolean) Schedules given in RageMP's main thread. WARNING: Avoid long procedures, because this could harm general event performance. Declaration public static Task Schedule(Action action, bool forceSchedule = false) Parameters Type Name Description Action action action to schedule System.Boolean forceSchedule If true, main thread check will be ignored and action will be scheduled Returns Type Description Task | Improve this Doc View Source Schedule<T>(Func<T>, Boolean) Schedules given in RageMP's main thread. WARNING: Avoid long procedures, because this could harm general event performance. Declaration public static Task<T> Schedule<T>(Func<T> action, bool forceSchedule = false) Parameters Type Name Description Func <T> action action to schedule System.Boolean forceSchedule If true, main thread check will be ignored and action will be scheduled Returns Type Description Task <T> Type Parameters Name Description T"
  },
  "api/AlternateLife.RageMP.Net.Scripting.IResource.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.IResource.html",
    "title": "Interface IResource",
    "keywords": "Interface IResource Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public interface IResource Methods | Improve this Doc View Source OnStartAsync() Declaration Task OnStartAsync() Returns Type Description Task | Improve this Doc View Source OnStopAsync() Declaration Task OnStopAsync() Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Enums.WeatherType.html": {
    "href": "api/AlternateLife.RageMP.Net.Enums.WeatherType.html",
    "title": "Enum WeatherType",
    "keywords": "Enum WeatherType Namespace : AlternateLife.RageMP.Net.Enums Assembly : AlternateLife.RageMP.Net.dll Syntax public enum WeatherType : int Fields Name Description Blizzard Clear Clearing Clouds Extrasunny Foggy Halloween Invalid Neutral Overcast Rain Smog Snow Snowlight Thunder Xmas"
  },
  "api/AlternateLife.RageMP.Net.Enums.MarkerType.html": {
    "href": "api/AlternateLife.RageMP.Net.Enums.MarkerType.html",
    "title": "Enum MarkerType",
    "keywords": "Enum MarkerType Namespace : AlternateLife.RageMP.Net.Enums Assembly : AlternateLife.RageMP.Net.dll Syntax public enum MarkerType : uint Fields Name Description CheckeredFlagCircle CheckeredFlagRect ChevronUpX1 ChevronUpX2 ChevronUpX3 DebugSphere Dollar HorizontalCircleArrow HorizontalCircleFlat HorizontalCircleSkinny HorizontalSplitArrowCircle LostMcDark LostMcLight Number0 Number1 Number2 Number3 Number4 Number5 Number6 Number7 Number8 Number9 PlaneModel ReplayIcon Stripes ThickCevronUp ThinCevronUp UpsideDownCone VerticalCircle VerticalCylinder Wolf"
  },
  "api/AlternateLife.RageMP.Net.Scripting.PlayerDeathDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.PlayerDeathDelegate.html",
    "title": "Delegate PlayerDeathDelegate",
    "keywords": "Delegate PlayerDeathDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task PlayerDeathDelegate(IPlayer player, uint reason, IPlayer killerPlayer); Parameters Type Name Description IPlayer player System.UInt32 reason IPlayer killerPlayer Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Scripting.EntityCreatedDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.EntityCreatedDelegate.html",
    "title": "Delegate EntityCreatedDelegate",
    "keywords": "Delegate EntityCreatedDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task EntityCreatedDelegate(IEntity entity); Parameters Type Name Description IEntity entity Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Scripting.VehicleHornToggleDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.VehicleHornToggleDelegate.html",
    "title": "Delegate VehicleHornToggleDelegate",
    "keywords": "Delegate VehicleHornToggleDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task VehicleHornToggleDelegate(IVehicle vehicle, bool toggle); Parameters Type Name Description IVehicle vehicle System.Boolean toggle Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Scripting.PlayerCommandDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.PlayerCommandDelegate.html",
    "title": "Delegate PlayerCommandDelegate",
    "keywords": "Delegate PlayerCommandDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task PlayerCommandDelegate(IPlayer player, string text, CommandEventArgs eventArgs); Parameters Type Name Description IPlayer player System.String text CommandEventArgs eventArgs Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Enums.EntityType.html": {
    "href": "api/AlternateLife.RageMP.Net.Enums.EntityType.html",
    "title": "Enum EntityType",
    "keywords": "Enum EntityType Namespace : AlternateLife.RageMP.Net.Enums Assembly : AlternateLife.RageMP.Net.dll Syntax public enum EntityType : byte Fields Name Description Blip Checkpoint Colshape Marker Object Pickup Player TextLabel Vehicle"
  },
  "documentation/index.html": {
    "href": "documentation/index.html",
    "title": "Introduction",
    "keywords": "Introduction"
  },
  "documentation/first-resource.html": {
    "href": "documentation/first-resource.html",
    "title": "First resource",
    "keywords": "First resource Creating your first resource, is very simple. All you need is a new .NET Core 2.2 Class library with a reference to our NuGet package, more information below. Step 0 - Prepare solution and project The simplest way to prepare the project is by using the dotnet CLI. You can skip this step, if you use Visual Studio. We call our resource, in this example, \"MyFirstResource\". $ dotnet new sln --name MyFirstResource $ dotnet new classlib --name MyFirstResource --framework netcoreapp2.1 $ dotnet sln MyFirstResource.sln add MyFirstResource Step 1 - Install NuGet package To get started, you need to reference the latest AlternateLife.RageMP.Net NuGet package . $ dotnet add MyFirstResource package AlternateLife.RageMP.Net Step 2 - Main class The server is only able to find your resource, if you create a single class that implements our interface IResource . The class could look like this. Note This class needs to have a parameterless-constructor, otherwise it is not startable. using System.Threading.Tasks; using AlternateLife.RageMP.Net.Scripting; namespace MyFirstResource { public class Main : IResource { public Main() { // Register events here or load everything, that needs to be loaded before the first player connects. } public async Task OnStartAsync() { // Load everything else like houses, cars or other things. } public async Task OnStopAsync() { // Save everything before the server will be stopped completely. } } } Step 3 - Prepare resource To finish your first resource, you need to copy your compiled .dll files to the server's resource folder. If you want to create a resource from the example above, the folder structure looks like this: ├── ... ├── dotnet/ | ├── resources/ | | └── firstresource/ | | └── MyFirstResource.dll | └── .. ├── ... Step 4 - Start server The resource should be ready and startable. You can now edit the resource even more and implement your own logic."
  },
  "api/AlternateLife.RageMP.Net.Scripting.TickDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.TickDelegate.html",
    "title": "Delegate TickDelegate",
    "keywords": "Delegate TickDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task TickDelegate(); Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Scripting.PlayerEnterVehicleDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.PlayerEnterVehicleDelegate.html",
    "title": "Delegate PlayerEnterVehicleDelegate",
    "keywords": "Delegate PlayerEnterVehicleDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task PlayerEnterVehicleDelegate(IPlayer player, IVehicle vehicle, int seat); Parameters Type Name Description IPlayer player IVehicle vehicle System.Int32 seat Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Data.ColorRgba.html": {
    "href": "api/AlternateLife.RageMP.Net.Data.ColorRgba.html",
    "title": "Struct ColorRgba",
    "keywords": "Struct ColorRgba Namespace : AlternateLife.RageMP.Net.Data Assembly : AlternateLife.RageMP.Net.dll Syntax public struct ColorRgba Constructors | Improve this Doc View Source ColorRgba(Byte, Byte, Byte, Byte) Declaration public ColorRgba(byte red, byte green, byte blue, byte alpha = null) Parameters Type Name Description System.Byte red System.Byte green System.Byte blue System.Byte alpha Fields | Improve this Doc View Source NumberValue Declaration public readonly uint NumberValue Field Value Type Description System.UInt32 Methods | Improve this Doc View Source GetAlpha() Declaration public byte GetAlpha() Returns Type Description System.Byte | Improve this Doc View Source GetBlue() Declaration public byte GetBlue() Returns Type Description System.Byte | Improve this Doc View Source GetGreen() Declaration public byte GetGreen() Returns Type Description System.Byte | Improve this Doc View Source GetRed() Declaration public byte GetRed() Returns Type Description System.Byte"
  },
  "api/AlternateLife.RageMP.Net.Scripting.PlayerWeaponChangeDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.PlayerWeaponChangeDelegate.html",
    "title": "Delegate PlayerWeaponChangeDelegate",
    "keywords": "Delegate PlayerWeaponChangeDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task PlayerWeaponChangeDelegate(IPlayer player, uint oldWeapon, uint newWeapon); Parameters Type Name Description IPlayer player System.UInt32 oldWeapon System.UInt32 newWeapon Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Enums.LogLevel.html": {
    "href": "api/AlternateLife.RageMP.Net.Enums.LogLevel.html",
    "title": "Enum LogLevel",
    "keywords": "Enum LogLevel Namespace : AlternateLife.RageMP.Net.Enums Assembly : AlternateLife.RageMP.Net.dll Syntax public enum LogLevel : int Fields Name Description Debug Error Fatal Info Trace Warn"
  },
  "api/AlternateLife.RageMP.Net.Data.html": {
    "href": "api/AlternateLife.RageMP.Net.Data.html",
    "title": "Namespace AlternateLife.RageMP.Net.Data",
    "keywords": "Namespace AlternateLife.RageMP.Net.Data Structs ClothData ColorRgba HeadBlendData HeadOverlayData PaintData PropData TimeData"
  },
  "api/AlternateLife.RageMP.Net.Scripting.PlayerReachWaypointDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.PlayerReachWaypointDelegate.html",
    "title": "Delegate PlayerReachWaypointDelegate",
    "keywords": "Delegate PlayerReachWaypointDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task PlayerReachWaypointDelegate(IPlayer player); Parameters Type Name Description IPlayer player Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Scripting.PlayerChatDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.PlayerChatDelegate.html",
    "title": "Delegate PlayerChatDelegate",
    "keywords": "Delegate PlayerChatDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task PlayerChatDelegate(IPlayer player, string text); Parameters Type Name Description IPlayer player System.String text Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Enums.DisconnectReason.html": {
    "href": "api/AlternateLife.RageMP.Net.Enums.DisconnectReason.html",
    "title": "Enum DisconnectReason",
    "keywords": "Enum DisconnectReason Namespace : AlternateLife.RageMP.Net.Enums Assembly : AlternateLife.RageMP.Net.dll Syntax public enum DisconnectReason : int Fields Name Description Disconnect Kicked Timeout"
  },
  "api/AlternateLife.RageMP.Net.Data.PaintData.html": {
    "href": "api/AlternateLife.RageMP.Net.Data.PaintData.html",
    "title": "Struct PaintData",
    "keywords": "Struct PaintData Namespace : AlternateLife.RageMP.Net.Data Assembly : AlternateLife.RageMP.Net.dll Syntax public struct PaintData Fields | Improve this Doc View Source Color Declaration public uint Color Field Value Type Description System.UInt32 | Improve this Doc View Source Type Declaration public uint Type Field Value Type Description System.UInt32"
  },
  "api/AlternateLife.RageMP.Net.Attributes.CommandAttribute.html": {
    "href": "api/AlternateLife.RageMP.Net.Attributes.CommandAttribute.html",
    "title": "Class CommandAttribute",
    "keywords": "Class CommandAttribute Inheritance System.Object CommandAttribute Namespace : AlternateLife.RageMP.Net.Attributes Assembly : AlternateLife.RageMP.Net.dll Syntax public class CommandAttribute : Attribute Constructors | Improve this Doc View Source CommandAttribute(String) Declaration public CommandAttribute(string name) Parameters Type Name Description System.String name Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String"
  },
  "api/AlternateLife.RageMP.Net.Enums.DeathReason.html": {
    "href": "api/AlternateLife.RageMP.Net.Enums.DeathReason.html",
    "title": "Enum DeathReason",
    "keywords": "Enum DeathReason Namespace : AlternateLife.RageMP.Net.Enums Assembly : AlternateLife.RageMP.Net.dll Syntax public enum DeathReason : uint Fields Name Description AirstrikeRocket Animal BarbedWire Bleeding Briefcase Briefcase02 Cougar Drowning DrowningInVehicle ElectricFence Exhaustion Explosion Fall Fire HeliCrash HitByWaterCannon RammedByCar RunOverByCar VehicleRocket"
  },
  "documentation/installation.html": {
    "href": "documentation/installation.html",
    "title": "Installation",
    "keywords": "Installation Before you can start using AlternateLife.RageMP.Net, you need to check following requirements: Downloads Latest .NET Core 2.2 SDK (Last tested: 2.2.2) Latest RAGE Multiplayer serverfiles (Download Launcher) The server files are contained in the RAGE Multiplayer installation. Latest AlternateLife.RageMP.Net ZIP Step 1 Uninstall the pre-installed GTA-Network bridge from the default RAGE Multiplayer server installation: Delete plugin-file <server-files>/plugins/bridge.dll . Delete folder <server-files>/bridge/ . Step 2 Extract the AlternateLife.RageMP.Net ZIP file (see downloads ) that contains following folders: dotnet and plugins and paste it into your root server folder. The RAGE Multiplayer server folder should look like this now: ├── client_packages/ ├── dotnet/ | ├── plugins/ | | └── ... | ├── resources/ | | └── example/ | ├── runtime/ | | └── ... | └── NLog.config ├── maps/ ├── packages/ ├── plugins/ | └── dotnet-wrapper.dll ├── bt.dat ├── conf.json ├── node.dll └── server.exe If you want to install your own gamemode, you can delete the example folder under <server-folder>/dotnet/resources Step 3 Create your first serverside resource by implementing the interface IResource ."
  },
  "documentation/events.html": {
    "href": "documentation/events.html",
    "title": "Events",
    "keywords": "Events Events are an essential part of AlternateLife.RageMP.Net and there are two kinds of events: ClientEvents and ServerEvents. Client-Events Client-Events, also called Remote-Events, are custom events which are callable by every player. Event registration You can register new eventhandlers by calling following method: MP.Events.Add(string eventName, PlayerRemoteEventDelegate callback); Example So, if you want to react to an event, in this example PLAYER_INTERACT , you could register it like this: MP.Events.Add(\"PLAYER_INTERACT\", async (player, eventName, arguments) => { // React to player interaction }); Server-Events Server-Events are special events, which are defined by the server and notify your resource about certain events like player-connect or commands executions. You can find a documentation for all events in the interface IEventScripting . Note You should register all events inside the constructor's-class that implements IResource , so you can react to all events, before the first player connects. Event registration Server-Events are standard C# events , so you can subscribe to a special event by using the += operator. Example As mentioned before, you should register all events inside the constructor, so it should look like this: public MyFirstResource() { MP.Events.PlayerReady += OnPlayerReady; } public async Task OnPlayerReady(IPlayer player) { await MP.Players.BroadcastAsync($\"Player {player.name} connected!\"); }"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "RageMP.NET API",
    "keywords": "RageMP.NET API"
  },
  "index.html": {
    "href": "index.html",
    "title": "Alternate-Life RageMP.NET",
    "keywords": "Alternate-Life RageMP.NET This is the documentation for the Alternate-Life RageMP server bridge to add proper .NET Core support. Getting started To get started with AlternateLife.RageMP.Net, look into our guide on how to create your first serverside resource. FAQ Why should I prefer AlternateLife.RageMP.Net instead of the official RAGE Multiplayer C# bridge? This library represents the native JavaScript RAGE Multiplayer server API as close as possible. Furthermore, this library has improved error and exception handling, so exceptions thrown inside a resource should be caught and logged correctly to prevent crashes. Thread-safety is handled by this library, so you do not have to worry about wrong thread calls or crashes due to race-conditions. This libary is developed with the task-based asynchronous pattern (TAP) in mind to achieve thread-safety. Is there a way to drop pure .cs files inside a resource folder and let the server compile it? No, you have to compile all projects into assemblies ( .dll ), other ways are not supported. Does this library offer a command handler to create simple commands? Yes, but in a very basic way. There are two ways to create commands: First, with command-handlers and attributes which define commands and a very simple MP.Commands.Add() method that uses a lambda function as handler. I want to create multiple main-classes which are activated by the server, is that even possible? No, the server looks for the first type that implements the IResource interface and activates it. You have to manage different types yourself. MIT License Copyright (c) 2018 Alternate-Life Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "api/AlternateLife.RageMP.Net.Interfaces.IColshape.html": {
    "href": "api/AlternateLife.RageMP.Net.Interfaces.IColshape.html",
    "title": "Interface IColshape",
    "keywords": "Interface IColshape Inherited Members IEntity.NativePointer IEntity.Exists IEntity.Id IEntity.Type IEntity.Model IEntity.Alpha IEntity.Dimension IEntity.Position IEntity.Rotation IEntity.Velocity IEntity.Destroy() IEntity.TryGetSharedData(String, Object) IEntity.SetSharedData(String, Object) IEntity.SetSharedData(IDictionary<String, Object>) IEntity.HasSharedData(String) IEntity.ResetSharedData(String) IEntity.TryGetData(String, Object) IEntity.SetData(String, Object) IEntity.SetData(IDictionary<String, Object>) IEntity.HasData(String) IEntity.ResetData(String) IEntity.ClearData() Namespace : AlternateLife.RageMP.Net.Interfaces Assembly : AlternateLife.RageMP.Net.dll Syntax public interface IColshape : IEntity Properties | Improve this Doc View Source ShapeType Get the type of the colshape. Declaration ColshapeType ShapeType { get; } Property Value Type Description ColshapeType Exceptions Type Condition EntityDeletedException This entity was deleted before Methods | Improve this Doc View Source IsPointWhithin(Vector3) Check if a position is within the colshape. Declaration bool IsPointWhithin(Vector3 position) Parameters Type Name Description Vector3 position Position to check Returns Type Description System.Boolean True if the position is inside the colshape, otherwise false Exceptions Type Condition EntityDeletedException This entity was deleted before"
  },
  "api/AlternateLife.RageMP.Net.Interfaces.IWorld.html": {
    "href": "api/AlternateLife.RageMP.Net.Interfaces.IWorld.html",
    "title": "Interface IWorld",
    "keywords": "Interface IWorld Namespace : AlternateLife.RageMP.Net.Interfaces Assembly : AlternateLife.RageMP.Net.dll Syntax public interface IWorld Properties | Improve this Doc View Source AreTrafficLightsLocked Get or set the traffic lights lock state of the world. Declaration bool AreTrafficLightsLocked { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Time Get or set the time of the world. Declaration TimeData Time { get; set; } Property Value Type Description TimeData | Improve this Doc View Source TrafficLightsState Get or set the traffic light state of the world. Declaration int TrafficLightsState { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Weather Get or set the weather of the world. If value is set to WeatherType.XMAS, snow will lay on the ground. Declaration WeatherType Weather { get; set; } Property Value Type Description WeatherType Methods | Improve this Doc View Source RemoveIpl(String) Remove an ipl from the world. Declaration void RemoveIpl(string ipl) Parameters Type Name Description System.String ipl Name of the ipl to unload | Improve this Doc View Source RequestIpl(String) Request an ipl in the world. Declaration void RequestIpl(string ipl) Parameters Type Name Description System.String ipl Name of the ipl to load | Improve this Doc View Source SetWeatherTransition(WeatherType, Single) Start a weather transition on the world. Declaration void SetWeatherTransition(WeatherType weather, float time = 0.5F) Parameters Type Name Description WeatherType weather New weather to transit to System.Single time Duration of the transition"
  },
  "api/AlternateLife.RageMP.Net.Interfaces.IVehiclePool.html": {
    "href": "api/AlternateLife.RageMP.Net.Interfaces.IVehiclePool.html",
    "title": "Interface IVehiclePool",
    "keywords": "Interface IVehiclePool Inherited Members IPool<IVehicle>.Item[UInt32] IPool<IVehicle>.GetAt(Int32) IPool<IVehicle>.GetAt(UInt32) IPool<IVehicle>.GetInRangeAsync(Vector3, Single, UInt32) IPool<IVehicle>.GetInDimensionAsync(UInt32) Namespace : AlternateLife.RageMP.Net.Interfaces Assembly : AlternateLife.RageMP.Net.dll Syntax public interface IVehiclePool : IPool<IVehicle>, IReadOnlyList<IVehicle> Methods | Improve this Doc View Source NewAsync(VehicleHash, Vector3, Single, String, UInt32, Boolean, Boolean, UInt32) Create a new vehicle. Declaration Task<IVehicle> NewAsync(VehicleHash model, Vector3 position, float heading = null, string numberPlate = \"\", uint alpha = null, bool locked = false, bool engine = false, uint dimension = null) Parameters Type Name Description VehicleHash model Model of the vehicle Vector3 position Position of the vehicle System.Single heading Heading of the vehicle System.String numberPlate Number plate of the vehicle System.UInt32 alpha Alpha of the vehicle System.Boolean locked Locked state of the vehicle System.Boolean engine Engine state of the vehicle System.UInt32 dimension Dimension of the vehicle Returns Type Description Task < IVehicle > New IVehicle instance | Improve this Doc View Source NewAsync(Int32, Vector3, Single, String, Int32, Boolean, Boolean, UInt32) Create a new vehicle. Declaration Task<IVehicle> NewAsync(int model, Vector3 position, float heading = null, string numberPlate = \"\", int alpha = 255, bool locked = false, bool engine = false, uint dimension = null) Parameters Type Name Description System.Int32 model Model of the vehicle Vector3 position Position of the vehicle System.Single heading Heading of the vehicle System.String numberPlate Number plate of the vehicle System.Int32 alpha Alpha of the vehicle System.Boolean locked Locked state of the vehicle System.Boolean engine Engine state of the vehicle System.UInt32 dimension Dimension of the vehicle Returns Type Description Task < IVehicle > New IVehicle instance | Improve this Doc View Source NewAsync(UInt32, Vector3, Single, String, UInt32, Boolean, Boolean, UInt32) Create a new vehicle. Declaration Task<IVehicle> NewAsync(uint model, Vector3 position, float heading = null, string numberPlate = \"\", uint alpha = null, bool locked = false, bool engine = false, uint dimension = null) Parameters Type Name Description System.UInt32 model Model of the vehicle Vector3 position Position of the vehicle System.Single heading Heading of the vehicle System.String numberPlate Number plate of the vehicle System.UInt32 alpha Alpha of the vehicle System.Boolean locked Locked state of the vehicle System.Boolean engine Engine state of the vehicle System.UInt32 dimension Dimension of the vehicle Returns Type Description Task < IVehicle > New IVehicle instance"
  },
  "api/AlternateLife.RageMP.Net.Interfaces.IObject.html": {
    "href": "api/AlternateLife.RageMP.Net.Interfaces.IObject.html",
    "title": "Interface IObject",
    "keywords": "Interface IObject Inherited Members IEntity.NativePointer IEntity.Exists IEntity.Id IEntity.Type IEntity.Model IEntity.Alpha IEntity.Dimension IEntity.Position IEntity.Rotation IEntity.Velocity IEntity.Destroy() IEntity.TryGetSharedData(String, Object) IEntity.SetSharedData(String, Object) IEntity.SetSharedData(IDictionary<String, Object>) IEntity.HasSharedData(String) IEntity.ResetSharedData(String) IEntity.TryGetData(String, Object) IEntity.SetData(String, Object) IEntity.SetData(IDictionary<String, Object>) IEntity.HasData(String) IEntity.ResetData(String) IEntity.ClearData() Namespace : AlternateLife.RageMP.Net.Interfaces Assembly : AlternateLife.RageMP.Net.dll Syntax public interface IObject : IEntity"
  },
  "api/AlternateLife.RageMP.Net.Interfaces.ICommandHandler.html": {
    "href": "api/AlternateLife.RageMP.Net.Interfaces.ICommandHandler.html",
    "title": "Interface ICommandHandler",
    "keywords": "Interface ICommandHandler Namespace : AlternateLife.RageMP.Net.Interfaces Assembly : AlternateLife.RageMP.Net.dll Syntax public interface ICommandHandler"
  },
  "api/AlternateLife.RageMP.Net.Scripting.VehicleSirenToggleDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.VehicleSirenToggleDelegate.html",
    "title": "Delegate VehicleSirenToggleDelegate",
    "keywords": "Delegate VehicleSirenToggleDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task VehicleSirenToggleDelegate(IVehicle vehicle, bool toggle); Parameters Type Name Description IVehicle vehicle System.Boolean toggle Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Scripting.PlayerRemoteEventDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.PlayerRemoteEventDelegate.html",
    "title": "Delegate PlayerRemoteEventDelegate",
    "keywords": "Delegate PlayerRemoteEventDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task PlayerRemoteEventDelegate(IPlayer player, string eventName, object[] arguments); Parameters Type Name Description IPlayer player System.String eventName System.Object [] arguments Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Interfaces.IColshapePool.html": {
    "href": "api/AlternateLife.RageMP.Net.Interfaces.IColshapePool.html",
    "title": "Interface IColshapePool",
    "keywords": "Interface IColshapePool Inherited Members IPool<IColshape>.Item[UInt32] IPool<IColshape>.GetAt(Int32) IPool<IColshape>.GetAt(UInt32) IPool<IColshape>.GetInRangeAsync(Vector3, Single, UInt32) IPool<IColshape>.GetInDimensionAsync(UInt32) Namespace : AlternateLife.RageMP.Net.Interfaces Assembly : AlternateLife.RageMP.Net.dll Syntax public interface IColshapePool : IPool<IColshape>, IReadOnlyList<IColshape> Methods | Improve this Doc View Source NewCircleAsync(Vector2, Single, UInt32) Create a new circle colshape. Declaration Task<IColshape> NewCircleAsync(Vector2 position, float radius, uint dimension = null) Parameters Type Name Description Vector2 position Position of the colshape System.Single radius Radius of the colshape System.UInt32 dimension Dimension of the colshape Returns Type Description Task < IColshape > New IColshape instance | Improve this Doc View Source NewCubeAsync(Vector3, Vector3, UInt32) Create a new cube colshape. Declaration Task<IColshape> NewCubeAsync(Vector3 position, Vector3 size, uint dimension = null) Parameters Type Name Description Vector3 position Position of the colshape Vector3 size Size of the colshape System.UInt32 dimension Dimension of the colshape Returns Type Description Task < IColshape > New IColshape instance | Improve this Doc View Source NewRectangleAsync(Vector2, Vector2, UInt32) Create a new rectangle colshape. Declaration Task<IColshape> NewRectangleAsync(Vector2 position, Vector2 size, uint dimension = null) Parameters Type Name Description Vector2 position Position of the colshape Vector2 size Size of the colshape System.UInt32 dimension Dimension of the colshape Returns Type Description Task < IColshape > New IColshape instance | Improve this Doc View Source NewSphereAsync(Vector3, Single, UInt32) Create a new sphere colshape. Declaration Task<IColshape> NewSphereAsync(Vector3 position, float radius, uint dimension = null) Parameters Type Name Description Vector3 position Position of the colshape System.Single radius Radius of the colshape System.UInt32 dimension Dimension of the colshape Returns Type Description Task < IColshape > New IColshape instance | Improve this Doc View Source NewTubeAsync(Vector3, Single, Single, UInt32) Create a new tube colshape. Declaration Task<IColshape> NewTubeAsync(Vector3 position, float radius, float height, uint dimension = null) Parameters Type Name Description Vector3 position Position of the colshape System.Single radius Radius of the colshape System.Single height Height of the colshape System.UInt32 dimension Dimension of the colshape Returns Type Description Task < IColshape > New IColshape instance"
  },
  "api/AlternateLife.RageMP.Net.Enums.ColshapeType.html": {
    "href": "api/AlternateLife.RageMP.Net.Enums.ColshapeType.html",
    "title": "Enum ColshapeType",
    "keywords": "Enum ColshapeType Namespace : AlternateLife.RageMP.Net.Enums Assembly : AlternateLife.RageMP.Net.dll Syntax public enum ColshapeType : int Fields Name Description Circle Cuboid Polygon Rectangle Sphere Tube"
  },
  "api/AlternateLife.RageMP.Net.Scripting.PlayerStreamOutDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.PlayerStreamOutDelegate.html",
    "title": "Delegate PlayerStreamOutDelegate",
    "keywords": "Delegate PlayerStreamOutDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task PlayerStreamOutDelegate(IPlayer player, IPlayer forPlayer); Parameters Type Name Description IPlayer player IPlayer forPlayer Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Scripting.PlayerJoinDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.PlayerJoinDelegate.html",
    "title": "Delegate PlayerJoinDelegate",
    "keywords": "Delegate PlayerJoinDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task PlayerJoinDelegate(IPlayer player); Parameters Type Name Description IPlayer player Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Scripting.EntityModelChangeDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.EntityModelChangeDelegate.html",
    "title": "Delegate EntityModelChangeDelegate",
    "keywords": "Delegate EntityModelChangeDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task EntityModelChangeDelegate(IEntity entity, uint oldModel); Parameters Type Name Description IEntity entity System.UInt32 oldModel Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Interfaces.IObjectPool.html": {
    "href": "api/AlternateLife.RageMP.Net.Interfaces.IObjectPool.html",
    "title": "Interface IObjectPool",
    "keywords": "Interface IObjectPool Inherited Members IPool<IObject>.Item[UInt32] IPool<IObject>.GetAt(Int32) IPool<IObject>.GetAt(UInt32) IPool<IObject>.GetInRangeAsync(Vector3, Single, UInt32) IPool<IObject>.GetInDimensionAsync(UInt32) Namespace : AlternateLife.RageMP.Net.Interfaces Assembly : AlternateLife.RageMP.Net.dll Syntax public interface IObjectPool : IPool<IObject>, IReadOnlyList<IObject> Methods | Improve this Doc View Source NewAsync(Int32, Vector3, Vector3, UInt32) Create a new object. Declaration Task<IObject> NewAsync(int model, Vector3 position, Vector3 rotation, uint dimension = null) Parameters Type Name Description System.Int32 model Model of the object Vector3 position Position of the object Vector3 rotation Rotation of the object System.UInt32 dimension Dimension of the object Returns Type Description Task < IObject > New IObject instance | Improve this Doc View Source NewAsync(UInt32, Vector3, Vector3, UInt32) Create a new object. Declaration Task<IObject> NewAsync(uint model, Vector3 position, Vector3 rotation, uint dimension = null) Parameters Type Name Description System.UInt32 model Model of the object Vector3 position Position of the object Vector3 rotation Rotation of the object System.UInt32 dimension Dimension of the object Returns Type Description Task < IObject > New IObject instance"
  },
  "api/AlternateLife.RageMP.Net.Scripting.PlayerEnterCheckpointDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.PlayerEnterCheckpointDelegate.html",
    "title": "Delegate PlayerEnterCheckpointDelegate",
    "keywords": "Delegate PlayerEnterCheckpointDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task PlayerEnterCheckpointDelegate(IPlayer player, ICheckpoint checkpointPointer); Parameters Type Name Description IPlayer player ICheckpoint checkpointPointer Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Scripting.CommandDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.CommandDelegate.html",
    "title": "Delegate CommandDelegate",
    "keywords": "Delegate CommandDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task CommandDelegate(IPlayer player, string[] arguments); Parameters Type Name Description IPlayer player System.String [] arguments Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Interfaces.IPlayerPool.html": {
    "href": "api/AlternateLife.RageMP.Net.Interfaces.IPlayerPool.html",
    "title": "Interface IPlayerPool",
    "keywords": "Interface IPlayerPool Inherited Members IPool<IPlayer>.Item[UInt32] IPool<IPlayer>.GetAt(Int32) IPool<IPlayer>.GetAt(UInt32) IPool<IPlayer>.GetInRangeAsync(Vector3, Single, UInt32) IPool<IPlayer>.GetInDimensionAsync(UInt32) Namespace : AlternateLife.RageMP.Net.Interfaces Assembly : AlternateLife.RageMP.Net.dll Syntax public interface IPlayerPool : IPool<IPlayer>, IReadOnlyList<IPlayer> Methods | Improve this Doc View Source BroadcastAsync(String) Send chat message to all players. Declaration Task BroadcastAsync(string message) Parameters Type Name Description System.String message Message to the players Returns Type Description Task | Improve this Doc View Source BroadcastAsync(String, UInt32) Send chat message to all players in given dimension. Declaration Task BroadcastAsync(string message, uint dimension) Parameters Type Name Description System.String message Message to the players System.UInt32 dimension Dimension to search players in Returns Type Description Task | Improve this Doc View Source BroadcastAsync(String, Vector3, Single, UInt32) Send chat message to all players at given position. Declaration Task BroadcastAsync(string message, Vector3 position, float range, uint dimension = null) Parameters Type Name Description System.String message Message to the players Vector3 position Position to search players at System.Single range Range to search players in System.UInt32 dimension Dimension to search players in Returns Type Description Task | Improve this Doc View Source CallAsync(IEnumerable<IPlayer>, String, IEnumerable<Object>) Send event to a list of players. Declaration Task CallAsync(IEnumerable<IPlayer> players, string eventName, IEnumerable<object> arguments) Parameters Type Name Description IEnumerable < IPlayer > players List of players to send the event to. System.String eventName Name of the event IEnumerable < System.Object > arguments Arguments of the event Returns Type Description Task | Improve this Doc View Source CallAsync(IEnumerable<IPlayer>, String, Object[]) Send event to a list of players. Declaration Task CallAsync(IEnumerable<IPlayer> players, string eventName, params object[] arguments) Parameters Type Name Description IEnumerable < IPlayer > players List of players to send the event to. System.String eventName Name of the event System.Object [] arguments Arguments of the event Returns Type Description Task | Improve this Doc View Source CallAsync(String, IEnumerable<Object>) Send event to all players. Declaration Task CallAsync(string eventName, IEnumerable<object> arguments) Parameters Type Name Description System.String eventName Name of the event IEnumerable < System.Object > arguments Arguments of the event Returns Type Description Task | Improve this Doc View Source CallAsync(String, Object[]) Send event to all players. Declaration Task CallAsync(string eventName, params object[] arguments) Parameters Type Name Description System.String eventName Name of the event System.Object [] arguments Arguments of the event Returns Type Description Task | Improve this Doc View Source CallAsync(UInt32, String, IEnumerable<Object>) Send event to all players in given dimension. Declaration Task CallAsync(uint dimension, string eventName, IEnumerable<object> arguments) Parameters Type Name Description System.UInt32 dimension Dimension to search players in System.String eventName Name of the event IEnumerable < System.Object > arguments Arguments of the event Returns Type Description Task | Improve this Doc View Source CallAsync(UInt32, String, Object[]) Send event to all players in given dimension. Declaration Task CallAsync(uint dimension, string eventName, params object[] arguments) Parameters Type Name Description System.UInt32 dimension Dimension to search players in System.String eventName Name of the event System.Object [] arguments Arguments of the event Returns Type Description Task | Improve this Doc View Source CallAsync(Vector3, Single, UInt32, String, IEnumerable<Object>) Send event to all players at given position. Declaration Task CallAsync(Vector3 position, float range, uint dimension, string eventName, IEnumerable<object> arguments) Parameters Type Name Description Vector3 position Position to search players at System.Single range Range to search players in System.UInt32 dimension Dimension to search players in System.String eventName Name of the event IEnumerable < System.Object > arguments Arguments of the event Returns Type Description Task | Improve this Doc View Source CallAsync(Vector3, Single, UInt32, String, Object[]) Send event to all players at given position. Declaration Task CallAsync(Vector3 position, float range, uint dimension, string eventName, params object[] arguments) Parameters Type Name Description Vector3 position Position to search players at System.Single range Range to search players in System.UInt32 dimension Dimension to search players in System.String eventName Name of the event System.Object [] arguments Arguments of the event Returns Type Description Task | Improve this Doc View Source InvokeAsync(IEnumerable<IPlayer>, UInt64, IEnumerable<Object>) Send native call to a list of players. Declaration Task InvokeAsync(IEnumerable<IPlayer> players, ulong nativeHash, IEnumerable<object> arguments) Parameters Type Name Description IEnumerable < IPlayer > players List of players to send the native to. System.UInt64 nativeHash Hash of the native IEnumerable < System.Object > arguments Arguments of the native Returns Type Description Task | Improve this Doc View Source InvokeAsync(IEnumerable<IPlayer>, UInt64, Object[]) Send native call to a list of players. Declaration Task InvokeAsync(IEnumerable<IPlayer> players, ulong nativeHash, params object[] arguments) Parameters Type Name Description IEnumerable < IPlayer > players List of players to send the native to. System.UInt64 nativeHash Hash of the native System.Object [] arguments Arguments of the native Returns Type Description Task | Improve this Doc View Source InvokeAsync(UInt32, UInt64, IEnumerable<Object>) Send native call to all players in given dimension. Declaration Task InvokeAsync(uint dimension, ulong nativeHash, IEnumerable<object> arguments) Parameters Type Name Description System.UInt32 dimension Dimension to search players in System.UInt64 nativeHash Hash of the native IEnumerable < System.Object > arguments Arguments of the native Returns Type Description Task | Improve this Doc View Source InvokeAsync(UInt32, UInt64, Object[]) Send native call to all players in given dimension. Declaration Task InvokeAsync(uint dimension, ulong nativeHash, params object[] arguments) Parameters Type Name Description System.UInt32 dimension Dimension to search players in System.UInt64 nativeHash Hash of the native System.Object [] arguments Arguments of the native Returns Type Description Task | Improve this Doc View Source InvokeAsync(UInt64, IEnumerable<Object>) Send native call to all players. Declaration Task InvokeAsync(ulong nativeHash, IEnumerable<object> arguments) Parameters Type Name Description System.UInt64 nativeHash Hash of the native IEnumerable < System.Object > arguments Arguments of the native Returns Type Description Task | Improve this Doc View Source InvokeAsync(UInt64, Object[]) Send native call to all players. Declaration Task InvokeAsync(ulong nativeHash, params object[] arguments) Parameters Type Name Description System.UInt64 nativeHash Hash of the native System.Object [] arguments Arguments of the native Returns Type Description Task | Improve this Doc View Source InvokeAsync(Vector3, Single, UInt32, UInt64, IEnumerable<Object>) Send native call to all players at given position. Declaration Task InvokeAsync(Vector3 position, float range, uint dimension, ulong nativeHash, IEnumerable<object> arguments) Parameters Type Name Description Vector3 position Position to search players at System.Single range Range to search players in System.UInt32 dimension Dimension to search players in System.UInt64 nativeHash Hash of the native IEnumerable < System.Object > arguments Arguments of the native Returns Type Description Task | Improve this Doc View Source InvokeAsync(Vector3, Single, UInt32, UInt64, Object[]) Send native call to all players at given position. Declaration Task InvokeAsync(Vector3 position, float range, uint dimension, ulong nativeHash, params object[] arguments) Parameters Type Name Description Vector3 position Position to search players at System.Single range Range to search players in System.UInt32 dimension Dimension to search players in System.UInt64 nativeHash Hash of the native System.Object [] arguments Arguments of the native Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Interfaces.IEntity.html": {
    "href": "api/AlternateLife.RageMP.Net.Interfaces.IEntity.html",
    "title": "Interface IEntity",
    "keywords": "Interface IEntity Namespace : AlternateLife.RageMP.Net.Interfaces Assembly : AlternateLife.RageMP.Net.dll Syntax public interface IEntity Properties | Improve this Doc View Source Alpha Get or set the alpha of the entity. Declaration uint Alpha { get; set; } Property Value Type Description System.UInt32 Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Dimension Get or set the dimension of the entity. Declaration uint Dimension { get; set; } Property Value Type Description System.UInt32 Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Exists Get current entity existance WARNING: Do NOT use this. Declaration bool Exists { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Id Get the entity id. Declaration uint Id { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source Model Get or set the model of the entity. Declaration uint Model { get; set; } Property Value Type Description System.UInt32 Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source NativePointer Get the internal entity pointer. WARNING: Do NOT use this. Declaration IntPtr NativePointer { get; } Property Value Type Description IntPtr | Improve this Doc View Source Position Get or set the position of the entity. Declaration Vector3 Position { get; set; } Property Value Type Description Vector3 Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Rotation Get or set the rotation of the entity. Declaration Vector3 Rotation { get; set; } Property Value Type Description Vector3 Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Type Get the entity type. Declaration EntityType Type { get; } Property Value Type Description EntityType | Improve this Doc View Source Velocity Get the velocity of the entity. Declaration Vector3 Velocity { get; } Property Value Type Description Vector3 Exceptions Type Condition EntityDeletedException This entity was deleted before Methods | Improve this Doc View Source ClearData() Clear all data of the entity. This does NOT clear the shared data. Declaration void ClearData() | Improve this Doc View Source Destroy() Destroy the entity. Declaration Task Destroy() Returns Type Description Task Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source HasData(String) Check if data is set on the entity. Declaration bool HasData(string key) Parameters Type Name Description System.String key Key of the data Returns Type Description System.Boolean True if any data is set, otherwise false | Improve this Doc View Source HasSharedData(String) Check if shared data is set on the entity. Declaration bool HasSharedData(string key) Parameters Type Name Description System.String key Key of the data Returns Type Description System.Boolean True if any data is set and not null, otherwise false Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source ResetData(String) Reset data of the entity. Declaration void ResetData(string key) Parameters Type Name Description System.String key Key of the data | Improve this Doc View Source ResetSharedData(String) Reset the shared data of the entity. Declaration void ResetSharedData(string key) Parameters Type Name Description System.String key Key of the data to reset Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetData(IDictionary<String, Object>) Set multiple data on the entity. Declaration void SetData(IDictionary<string, object> values) Parameters Type Name Description IDictionary < System.String , System.Object > values Key value pairs to set | Improve this Doc View Source SetData(String, Object) Set data on the entity. Declaration void SetData(string key, object data) Parameters Type Name Description System.String key Key of the data System.Object data Value of the data | Improve this Doc View Source SetSharedData(IDictionary<String, Object>) Set multiple shared data on the entity. Declaration void SetSharedData(IDictionary<string, object> values) Parameters Type Name Description IDictionary < System.String , System.Object > values Key value pairs to set Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetSharedData(String, Object) Set shared data on the entity. Declaration void SetSharedData(string key, object data) Parameters Type Name Description System.String key Key of the data System.Object data Value of the data Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source TryGetData(String, out Object) Get data of the entity. Declaration bool TryGetData(string key, out object data) Parameters Type Name Description System.String key Key of the data System.Object data Value of the data Returns Type Description System.Boolean True if any data is set, otherwise false | Improve this Doc View Source TryGetSharedData(String, out Object) Get shared data of the entity. Declaration bool TryGetSharedData(string key, out object data) Parameters Type Name Description System.String key Key of the data System.Object data Value of the data Returns Type Description System.Boolean True if any data is set and not null, otherwise false Exceptions Type Condition EntityDeletedException This entity was deleted before"
  },
  "api/AlternateLife.RageMP.Net.Interfaces.IConfig.html": {
    "href": "api/AlternateLife.RageMP.Net.Interfaces.IConfig.html",
    "title": "Interface IConfig",
    "keywords": "Interface IConfig Namespace : AlternateLife.RageMP.Net.Interfaces Assembly : AlternateLife.RageMP.Net.dll Syntax public interface IConfig Methods | Improve this Doc View Source GetInt(String, Int32) Get number value from the server config. Declaration int GetInt(string key, int defaultValue = null) Parameters Type Name Description System.String key Key of the value System.Int32 defaultValue Default value if key was not found Returns Type Description System.Int32 Actual value if the key was found, otherwise the defaultValue | Improve this Doc View Source GetString(String, String) Get string value from the server config. Declaration string GetString(string key, string defaultValue = \"\") Parameters Type Name Description System.String key Key of the value System.String defaultValue Default value if key was not found Returns Type Description System.String Actual value if the key was found, otherwise the defaultValue"
  },
  "api/AlternateLife.RageMP.Net.Interfaces.ICheckpointPool.html": {
    "href": "api/AlternateLife.RageMP.Net.Interfaces.ICheckpointPool.html",
    "title": "Interface ICheckpointPool",
    "keywords": "Interface ICheckpointPool Inherited Members IPool<ICheckpoint>.Item[UInt32] IPool<ICheckpoint>.GetAt(Int32) IPool<ICheckpoint>.GetAt(UInt32) IPool<ICheckpoint>.GetInRangeAsync(Vector3, Single, UInt32) IPool<ICheckpoint>.GetInDimensionAsync(UInt32) Namespace : AlternateLife.RageMP.Net.Interfaces Assembly : AlternateLife.RageMP.Net.dll Syntax public interface ICheckpointPool : IPool<ICheckpoint>, IReadOnlyList<ICheckpoint> Methods | Improve this Doc View Source NewAsync(Int32, Vector3, Vector3, Single, ColorRgba, Boolean, UInt32) Create a new checkpoint. Declaration Task<ICheckpoint> NewAsync(int type, Vector3 position, Vector3 nextPosition, float radius, ColorRgba color, bool visible = true, uint dimension = null) Parameters Type Name Description System.Int32 type Type of the checkpoint Vector3 position Position of the checkpoint Vector3 nextPosition Next position of the checkpoint System.Single radius Radius of the checkpoint ColorRgba color Color of the checkpoint System.Boolean visible Visible state of the checkpoint System.UInt32 dimension Dimension of the checkpoint Returns Type Description Task < ICheckpoint > New ICheckpoint instance | Improve this Doc View Source NewAsync(UInt32, Vector3, Vector3, Single, ColorRgba, Boolean, UInt32) Create a new checkpoint. Declaration Task<ICheckpoint> NewAsync(uint type, Vector3 position, Vector3 nextPosition, float radius, ColorRgba color, bool visible = true, uint dimension = null) Parameters Type Name Description System.UInt32 type Type of the checkpoint Vector3 position Position of the checkpoint Vector3 nextPosition Next position of the checkpoint System.Single radius Radius of the checkpoint ColorRgba color Color of the checkpoint System.Boolean visible Visible state of the checkpoint System.UInt32 dimension Dimension of the checkpoint Returns Type Description Task < ICheckpoint > New ICheckpoint instance"
  },
  "api/AlternateLife.RageMP.Net.Enums.PropSlot.html": {
    "href": "api/AlternateLife.RageMP.Net.Enums.PropSlot.html",
    "title": "Enum PropSlot",
    "keywords": "Enum PropSlot Namespace : AlternateLife.RageMP.Net.Enums Assembly : AlternateLife.RageMP.Net.dll Syntax public enum PropSlot : int Fields Name Description Bracelets Ears Glasses Hats Watches"
  },
  "api/AlternateLife.RageMP.Net.Interfaces.IMarker.html": {
    "href": "api/AlternateLife.RageMP.Net.Interfaces.IMarker.html",
    "title": "Interface IMarker",
    "keywords": "Interface IMarker Inherited Members IEntity.NativePointer IEntity.Exists IEntity.Id IEntity.Type IEntity.Model IEntity.Alpha IEntity.Dimension IEntity.Position IEntity.Rotation IEntity.Velocity IEntity.Destroy() IEntity.TryGetSharedData(String, Object) IEntity.SetSharedData(String, Object) IEntity.SetSharedData(IDictionary<String, Object>) IEntity.HasSharedData(String) IEntity.ResetSharedData(String) IEntity.TryGetData(String, Object) IEntity.SetData(String, Object) IEntity.SetData(IDictionary<String, Object>) IEntity.HasData(String) IEntity.ResetData(String) IEntity.ClearData() Namespace : AlternateLife.RageMP.Net.Interfaces Assembly : AlternateLife.RageMP.Net.dll Syntax public interface IMarker : IEntity Properties | Improve this Doc View Source Color Get or set the color of the entity. Declaration ColorRgba Color { get; set; } Property Value Type Description ColorRgba Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Direction Get or set the direction of the entity. Declaration Vector3 Direction { get; set; } Property Value Type Description Vector3 Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source IsVisible Get or set the visible state of the entity. Declaration bool IsVisible { get; set; } Property Value Type Description System.Boolean Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Scale Get or set the scale of the entity. Declaration float Scale { get; set; } Property Value Type Description System.Single Exceptions Type Condition EntityDeletedException This entity was deleted before Methods | Improve this Doc View Source HideFor(IEnumerable<IPlayer>) Hide marker for a list of players. Declaration void HideFor(IEnumerable<IPlayer> players) Parameters Type Name Description IEnumerable < IPlayer > players List of players to hide the marker for Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source ShowFor(IEnumerable<IPlayer>) Show marker for a list of players. Declaration void ShowFor(IEnumerable<IPlayer> players) Parameters Type Name Description IEnumerable < IPlayer > players List of players to show the marker for Exceptions Type Condition EntityDeletedException This entity was deleted before"
  },
  "api/AlternateLife.RageMP.Net.Interfaces.ICommands.html": {
    "href": "api/AlternateLife.RageMP.Net.Interfaces.ICommands.html",
    "title": "Interface ICommands",
    "keywords": "Interface ICommands Namespace : AlternateLife.RageMP.Net.Interfaces Assembly : AlternateLife.RageMP.Net.dll Syntax public interface ICommands Methods | Improve this Doc View Source DoesCommandExist(String) Checks if specified event exists. Declaration bool DoesCommandExist(string name) Parameters Type Name Description System.String name name to check Returns Type Description System.Boolean true if command was registered before, false otherwise | Improve this Doc View Source GetRegisteredCommands() Returns a collection of already created commands. Declaration IReadOnlyCollection<string> GetRegisteredCommands() Returns Type Description IReadOnlyCollection < System.String > collection of command names | Improve this Doc View Source Register(String, CommandDelegate) Registers a simple command directly without dedicated handler class. Declaration bool Register(string name, CommandDelegate callback) Parameters Type Name Description System.String name name of the command CommandDelegate callback callback to call when command was executed Returns Type Description System.Boolean true if command was registered, false otherwise | Improve this Doc View Source RegisterHandler(ICommandHandler) Registers a new commandhandler with command methods Declaration void RegisterHandler(ICommandHandler handler) Parameters Type Name Description ICommandHandler handler ICommandHandler to register | Improve this Doc View Source Remove(CommandDelegate) Removes an already existing simple command callback. Declaration void Remove(CommandDelegate callback) Parameters Type Name Description CommandDelegate callback callback that was registered before | Improve this Doc View Source Remove(String) Removes an already existing command by name. Declaration void Remove(string name) Parameters Type Name Description System.String name name to search for | Improve this Doc View Source RemoveHandler(ICommandHandler) Removes an already registered commandhandler Declaration void RemoveHandler(ICommandHandler handler) Parameters Type Name Description ICommandHandler handler ICommandHandler to remove"
  },
  "api/AlternateLife.RageMP.Net.Scripting.VehicleDeathDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.VehicleDeathDelegate.html",
    "title": "Delegate VehicleDeathDelegate",
    "keywords": "Delegate VehicleDeathDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task VehicleDeathDelegate(IVehicle vehicle, uint reason, IPlayer killerPlayer); Parameters Type Name Description IVehicle vehicle System.UInt32 reason IPlayer killerPlayer Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Interfaces.html": {
    "href": "api/AlternateLife.RageMP.Net.Interfaces.html",
    "title": "Namespace AlternateLife.RageMP.Net.Interfaces",
    "keywords": "Namespace AlternateLife.RageMP.Net.Interfaces Interfaces IBlip IBlipPool ICheckpoint ICheckpointPool IColshape IColshapePool ICommandHandler ICommands IConfig IEntity IEventScripting ILogger IMarker IMarkerPool IObject IObjectPool IPlayer IPlayerPool IPool<T> ITextLabel ITextLabelPool IVehicle IVehiclePool IWorld"
  },
  "api/AlternateLife.RageMP.Net.Attributes.html": {
    "href": "api/AlternateLife.RageMP.Net.Attributes.html",
    "title": "Namespace AlternateLife.RageMP.Net.Attributes",
    "keywords": "Namespace AlternateLife.RageMP.Net.Attributes Classes CommandAttribute"
  },
  "api/AlternateLife.RageMP.Net.Scripting.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.html",
    "title": "Namespace AlternateLife.RageMP.Net.Scripting",
    "keywords": "Namespace AlternateLife.RageMP.Net.Scripting Classes MP Interfaces IResource Delegates CommandDelegate EntityCreatedDelegate EntityDestroyedDelegate EntityModelChangeDelegate PlayerChatDelegate PlayerCommandDelegate PlayerCreateWaypointDelegate PlayerDamageDelegate PlayerDeathDelegate PlayerEnterCheckpointDelegate PlayerEnterColshapeDelegate PlayerEnterVehicleDelegate PlayerExitCheckpointDelegate PlayerExitColshapeDelegate PlayerExitVehicleDelegate PlayerJoinDelegate PlayerQuitDelegate PlayerReachWaypointDelegate PlayerReadyDelegate PlayerRemoteEventDelegate PlayerSpawnDelegate PlayerStartEnterVehicleDelegate PlayerStartExitVehicleDelegate PlayerStreamInDelegate PlayerStreamOutDelegate PlayerWeaponChangeDelegate TickDelegate VehicleDamageDelegate VehicleDeathDelegate VehicleHornToggleDelegate VehicleSirenToggleDelegate VehicleTrailerAttachedDelegate"
  },
  "api/AlternateLife.RageMP.Net.Scripting.PlayerStartEnterVehicleDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.PlayerStartEnterVehicleDelegate.html",
    "title": "Delegate PlayerStartEnterVehicleDelegate",
    "keywords": "Delegate PlayerStartEnterVehicleDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task PlayerStartEnterVehicleDelegate(IPlayer player, IVehicle vehicle, int seat); Parameters Type Name Description IPlayer player IVehicle vehicle System.Int32 seat Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Scripting.PlayerSpawnDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.PlayerSpawnDelegate.html",
    "title": "Delegate PlayerSpawnDelegate",
    "keywords": "Delegate PlayerSpawnDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task PlayerSpawnDelegate(IPlayer player); Parameters Type Name Description IPlayer player Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Exceptions.EntityDeletedException.html": {
    "href": "api/AlternateLife.RageMP.Net.Exceptions.EntityDeletedException.html",
    "title": "Class EntityDeletedException",
    "keywords": "Class EntityDeletedException Inheritance System.Object EntityDeletedException Namespace : AlternateLife.RageMP.Net.Exceptions Assembly : AlternateLife.RageMP.Net.dll Syntax public class EntityDeletedException : Exception"
  },
  "api/AlternateLife.RageMP.Net.Enums.WeaponHash.html": {
    "href": "api/AlternateLife.RageMP.Net.Enums.WeaponHash.html",
    "title": "Enum WeaponHash",
    "keywords": "Enum WeaponHash Namespace : AlternateLife.RageMP.Net.Enums Assembly : AlternateLife.RageMP.Net.dll Syntax public enum WeaponHash : uint Fields Name Description AdvancedRifle ApPistol AssaultRifle AssaultRifleMk2 AssaultShotgun AssaultSmg Ball Bat BattleAxe Bottle BullpupRifle BullpupRifleMk2 BullpupShotgun BzGas CarbineRifle CarbineRifleMk2 CombatMg CombatMgMk2 CombatPdw CombatPistol CompactGrenadeLauncher CompactRifle Crowbar Dagger DoubleAction DoubleBarrelShotgun FireExtinguisher Firework Flare FlareGun Flashlight GolfClub Grenade GrenadeLauncher GrenadeLauncherSmoke Gusenberg Hammer Hatchet HeavyPistol HeavyShotgun HeavySniper HeavySniperMk2 HomingLauncher Knife KnuckleDuster Machete MachinePistol MarksmanPistol MarksmanRifle MarksmanRifleMk2 Mg MicroSmg Minigun MiniSmg Molotov Musket Nightstick Parachute PetrolCan PipeBomb Pistol Pistol50 PistolMk2 PoolCue ProximityMine PumpShotgun PumpShotgunMk2 Railgun RayCarbine RayMinigun RayPistol Revolver RevolverMk2 Rpg SawnOffShotgun Smg SmgMk2 SmokeGrenade SniperRifle Snowball SnsPistol SnsPistolMk2 SpecialCarbine SpecialCarbineMk2 StickyBomb StoneHatchet StunGun SweeperShotgun SwitchBlade Unarmed VintagePistol Wrench"
  },
  "api/AlternateLife.RageMP.Net.Interfaces.ILogger.html": {
    "href": "api/AlternateLife.RageMP.Net.Interfaces.ILogger.html",
    "title": "Interface ILogger",
    "keywords": "Interface ILogger Namespace : AlternateLife.RageMP.Net.Interfaces Assembly : AlternateLife.RageMP.Net.dll Syntax public interface ILogger Properties | Improve this Doc View Source FramesToSkip Defines how many methods the class detector should skip on a log message. This property is very useful, if you create your own wrapper that utilizes this method. Declaration int FramesToSkip { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source Debug(String, Exception) Log a debug message. Declaration void Debug(string message, Exception exception = null) Parameters Type Name Description System.String message Message to log Exception exception Exception to log | Improve this Doc View Source Error(String, Exception) Log an error message. Declaration void Error(string message, Exception exception = null) Parameters Type Name Description System.String message Message to log Exception exception Exception to log | Improve this Doc View Source Fatal(String, Exception) Log an fatal message. Declaration void Fatal(string message, Exception exception = null) Parameters Type Name Description System.String message Message to log Exception exception Exception to log | Improve this Doc View Source Info(String, Exception) Log an info message. Declaration void Info(string message, Exception exception = null) Parameters Type Name Description System.String message Message to log Exception exception Exception to log | Improve this Doc View Source Log(LogLevel, String, Exception) Logs a message with a specific loglevel. Declaration void Log(LogLevel logLevel, string message, Exception exception = null) Parameters Type Name Description LogLevel logLevel Loglevel of this message System.String message Message to log Exception exception Exception to log | Improve this Doc View Source Trace(String, Exception) Log a trace message. Declaration void Trace(string message, Exception exception = null) Parameters Type Name Description System.String message Message to log Exception exception Exception to log | Improve this Doc View Source Warn(String, Exception) Log a warning message. Declaration void Warn(string message, Exception exception = null) Parameters Type Name Description System.String message Message to log Exception exception Exception to log"
  },
  "api/AlternateLife.RageMP.Net.Scripting.ScriptingClasses.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.ScriptingClasses.html",
    "title": "Namespace AlternateLife.RageMP.Net.Scripting.ScriptingClasses",
    "keywords": "Namespace AlternateLife.RageMP.Net.Scripting.ScriptingClasses Classes CommandEventArgs"
  },
  "api/AlternateLife.RageMP.Net.Scripting.ScriptingClasses.CommandEventArgs.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.ScriptingClasses.CommandEventArgs.html",
    "title": "Class CommandEventArgs",
    "keywords": "Class CommandEventArgs Inheritance System.Object CommandEventArgs Namespace : AlternateLife.RageMP.Net.Scripting.ScriptingClasses Assembly : AlternateLife.RageMP.Net.dll Syntax public class CommandEventArgs : EventArgs Properties | Improve this Doc View Source Cancelled Declaration public bool Cancelled { get; set; } Property Value Type Description System.Boolean"
  },
  "api/AlternateLife.RageMP.Net.Interfaces.ITextLabelPool.html": {
    "href": "api/AlternateLife.RageMP.Net.Interfaces.ITextLabelPool.html",
    "title": "Interface ITextLabelPool",
    "keywords": "Interface ITextLabelPool Inherited Members IPool<ITextLabel>.Item[UInt32] IPool<ITextLabel>.GetAt(Int32) IPool<ITextLabel>.GetAt(UInt32) IPool<ITextLabel>.GetInRangeAsync(Vector3, Single, UInt32) IPool<ITextLabel>.GetInDimensionAsync(UInt32) Namespace : AlternateLife.RageMP.Net.Interfaces Assembly : AlternateLife.RageMP.Net.dll Syntax public interface ITextLabelPool : IPool<ITextLabel>, IReadOnlyList<ITextLabel> Methods | Improve this Doc View Source NewAsync(Vector3, String, Int32, ColorRgba, Single, Boolean, UInt32) Create a new text label. Declaration Task<ITextLabel> NewAsync(Vector3 position, string text, int font, ColorRgba color, float drawDistance = null, bool los = false, uint dimension = null) Parameters Type Name Description Vector3 position Position of the text label System.String text Text of the text label System.Int32 font Font of the text label ColorRgba color Color of the text label System.Single drawDistance Draw distance of the text label System.Boolean los Line of sight state of the text label System.UInt32 dimension Dimension of the text label Returns Type Description Task < ITextLabel > New ITextLabel instance | Improve this Doc View Source NewAsync(Vector3, String, UInt32, ColorRgba, Single, Boolean, UInt32) Create a new text label. Declaration Task<ITextLabel> NewAsync(Vector3 position, string text, uint font, ColorRgba color, float drawDistance = null, bool los = false, uint dimension = null) Parameters Type Name Description Vector3 position Position of the text label System.String text Text of the text label System.UInt32 font Font of the text label ColorRgba color Color of the text label System.Single drawDistance Draw distance of the text label System.Boolean los Line of sight state of the text label System.UInt32 dimension Dimension of the text label Returns Type Description Task < ITextLabel > New ITextLabel instance"
  },
  "api/AlternateLife.RageMP.Net.Interfaces.IMarkerPool.html": {
    "href": "api/AlternateLife.RageMP.Net.Interfaces.IMarkerPool.html",
    "title": "Interface IMarkerPool",
    "keywords": "Interface IMarkerPool Inherited Members IPool<IMarker>.Item[UInt32] IPool<IMarker>.GetAt(Int32) IPool<IMarker>.GetAt(UInt32) IPool<IMarker>.GetInRangeAsync(Vector3, Single, UInt32) IPool<IMarker>.GetInDimensionAsync(UInt32) Namespace : AlternateLife.RageMP.Net.Interfaces Assembly : AlternateLife.RageMP.Net.dll Syntax public interface IMarkerPool : IPool<IMarker>, IReadOnlyList<IMarker> Methods | Improve this Doc View Source NewAsync(MarkerType, Vector3, Vector3, Vector3, Single, ColorRgba, Boolean, UInt32) Create a new marker. Declaration Task<IMarker> NewAsync(MarkerType type, Vector3 position, Vector3 rotation, Vector3 direction, float scale, ColorRgba color, bool visible, uint dimension = null) Parameters Type Name Description MarkerType type Model of the marker Vector3 position Position of the marker Vector3 rotation Rotation of the marker Vector3 direction Direction of the marker System.Single scale Scale of the marker ColorRgba color Color of the marker System.Boolean visible Visible state of the marker System.UInt32 dimension Dimension of the marker Returns Type Description Task < IMarker > New IMarker instance | Improve this Doc View Source NewAsync(Int32, Vector3, Vector3, Vector3, Single, ColorRgba, Boolean, UInt32) Create a new marker. Declaration Task<IMarker> NewAsync(int type, Vector3 position, Vector3 rotation, Vector3 direction, float scale, ColorRgba color, bool visible, uint dimension = null) Parameters Type Name Description System.Int32 type Model of the marker Vector3 position Position of the marker Vector3 rotation Rotation of the marker Vector3 direction Direction of the marker System.Single scale Scale of the marker ColorRgba color Color of the marker System.Boolean visible Visible state of the marker System.UInt32 dimension Dimension of the marker Returns Type Description Task < IMarker > New IMarker instance | Improve this Doc View Source NewAsync(UInt32, Vector3, Vector3, Vector3, Single, ColorRgba, Boolean, UInt32) Create a new marker. Declaration Task<IMarker> NewAsync(uint type, Vector3 position, Vector3 rotation, Vector3 direction, float scale, ColorRgba color, bool visible, uint dimension = null) Parameters Type Name Description System.UInt32 type Model of the marker Vector3 position Position of the marker Vector3 rotation Rotation of the marker Vector3 direction Direction of the marker System.Single scale Scale of the marker ColorRgba color Color of the marker System.Boolean visible Visible state of the marker System.UInt32 dimension Dimension of the marker Returns Type Description Task < IMarker > New IMarker instance"
  },
  "api/AlternateLife.RageMP.Net.Interfaces.IBlipPool.html": {
    "href": "api/AlternateLife.RageMP.Net.Interfaces.IBlipPool.html",
    "title": "Interface IBlipPool",
    "keywords": "Interface IBlipPool Inherited Members IPool<IBlip>.Item[UInt32] IPool<IBlip>.GetAt(Int32) IPool<IBlip>.GetAt(UInt32) IPool<IBlip>.GetInRangeAsync(Vector3, Single, UInt32) IPool<IBlip>.GetInDimensionAsync(UInt32) Namespace : AlternateLife.RageMP.Net.Interfaces Assembly : AlternateLife.RageMP.Net.dll Syntax public interface IBlipPool : IPool<IBlip>, IReadOnlyList<IBlip> Methods | Improve this Doc View Source NewAsync(Int32, Vector3, Single, Int32, String, Int32, Single, Boolean, Int32, UInt32) Create a new blip. Declaration Task<IBlip> NewAsync(int sprite, Vector3 position, float scale, int color, string name = \"\", int alpha = 255, float drawDistance = null, bool shortRange = false, int rotation = 0, uint dimension = null) Parameters Type Name Description System.Int32 sprite Sprite number for the blip Vector3 position Position of the blip System.Single scale Scale of the blip System.Int32 color Color number of the blip System.String name Name of the blip System.Int32 alpha Alpha of the blip System.Single drawDistance Draw distance of the blip System.Boolean shortRange Short range flag of the blip System.Int32 rotation Rotation of the blip System.UInt32 dimension Dimension of the blip Returns Type Description Task < IBlip > New IBlip instance | Improve this Doc View Source NewAsync(UInt32, Vector3, Single, UInt32, String, UInt32, Single, Boolean, Int32, UInt32) Create a new blip. Declaration Task<IBlip> NewAsync(uint sprite, Vector3 position, float scale, uint color, string name = \"\", uint alpha = null, float drawDistance = null, bool shortRange = false, int rotation = 0, uint dimension = null) Parameters Type Name Description System.UInt32 sprite Sprite number for the blip Vector3 position Position of the blip System.Single scale Scale of the blip System.UInt32 color Color number of the blip System.String name Name of the blip System.UInt32 alpha Alpha of the blip System.Single drawDistance Draw distance of the blip System.Boolean shortRange Short range flag of the blip System.Int32 rotation Rotation of the blip System.UInt32 dimension Dimension of the blip Returns Type Description Task < IBlip > New IBlip instance"
  },
  "api/AlternateLife.RageMP.Net.Enums.PedHash.html": {
    "href": "api/AlternateLife.RageMP.Net.Enums.PedHash.html",
    "title": "Enum PedHash",
    "keywords": "Enum PedHash Namespace : AlternateLife.RageMP.Net.Enums Assembly : AlternateLife.RageMP.Net.dll Syntax public enum PedHash : uint Fields Name Description Abigail AbigailCutscene Abner Acult01Amm Acult01Amo Acult01Amy Acult02Amo Acult02Amy AfriAmer01Amm AfyClubCust01 AfyClubCust02 AfyClubCust03 Agent Agent14 Agent14Cutscene AgentCutscene Airhostess01Sfy AirworkerSmy AlDiNapoli AmandaTownley AmandaTownleyCutscene Ammucity01Smy AmmuCountrySmm AmyClubCust01 AmyClubCust02 AmyClubCust03 Andreas AndreasCutscene AnitaCutscene Antonb AntonCutscene ArmBoss01Gmm ArmGoon01Gmm ArmGoon02Gmy ArmLieut01Gmm Armoured01 Armoured01Smm Armoured02Smm Armymech01Smy Ashley AshleyCutscene Autopsy01Smy Autoshop01Smm Autoshop02Smm AviSchwartzman AviSchwartzmanCutscene Avon AvonCutscene Azteca01Gmy Babyd BallaEast01Gmy BallaOrig01Gmy Ballas01Gfy Ballasog BallasogCutscene BallaSout01Gmy Bankman Bankman01 BankmanCutscene Barman01Smy Barry BarryCutscene Bartender01Sfy Baygor Baywatch01Sfy Baywatch01Smy Beach01Afm Beach01Afy Beach01Amm Beach01Amo Beach01Amy Beach02Amm Beach02Amy Beach03Amy Beachvesp01Amy Beachvesp02Amy Benny Bestmen Beverly BeverlyCutscene Bevhills01Afm Bevhills01Afy Bevhills01Amm Bevhills01Amy Bevhills02Afm Bevhills02Afy Bevhills02Amm Bevhills02Amy Bevhills03Afy Bevhills04Afy BikeHire01 BikerChic Blackops01Smy Blackops02Smy Blackops03Smy Boar BoatStaff01F BoatStaff01M Bodybuild01Afm Bogdan Bouncer01Smm Brad BradCadaverCutscene BradCutscene Breakdance01Amy Bride BrideCutscene BurgerDrug BurgerDrugCutscene Busboy01Smy Busicas01Amy Business01Afy Business01Amm Business01Amy Business02Afm Business02Afy Business02Amy Business03Afy Business03Amy Business04Afy Busker01Smo Car3Guy1 Car3Guy1Cutscene Car3Guy2 Car3Guy2Cutscene CarBuyerCutscene CarDesignFemale01 Casey CaseyCutscene Cat CbsAlan CbsBryony CCrew01Smm Chef Chef01Smy Chef2 Chef2Cutscene ChefCutscene ChemSec01Smm ChemWork01Gmm ChiBoss01Gmm ChickenHawk ChiCold01Gmm ChiGoon01Gmm ChiGoon02Gmm Chimp ChinGoonCutscene Chip Chop CiaSec01Smm Claude01 Clay ClayCutscene Claypain Cletus CletusCutscene Clown01Smy ClubhouseBar01 Cntrybar01Smm CocaineFemale01 CocaineMale01 ComJane Construct01Smy Construct02Smy Cop01Sfy Cop01Smy CopCutscene Cormorant Corpse01Ufy Corpse01Umy Corpse02Ufy CounterfeitFemale01 CounterfeitMale01 Cow Coyote CrisFormage CrisFormageCutscene Crow CsbDix CsbdjBlaMadon CsbEnglishDave CsbSol CsbTalCc CsbTalMm CsbTonyPrince CsLazlow2 CustomerCutscene Cyclist01 Cyclist01Amy Dale DaleCutscene DaveNorton DaveNortonCutscene DeadHooker Dealer01Smy DebraCutscene Deer Denise DeniseCutscene DeniseFriendCutscene Devin DevinCutscene Devinsec01Smy Dhill01Amy DoaMan Dockwork01Smm Dockwork01Smy Doctor01Smm Dolphin Dom DomCutscene Doorman01Smy Downtown01Afm Downtown01Amy Dreyfuss DreyfussCutscene DrFriedlander DrFriedlanderCutscene Drowned DwService01Smy DwService02Smy Eastsa01Afm Eastsa01Afy Eastsa01Amm Eastsa01Amy Eastsa02Afm Eastsa02Afy Eastsa02Amm Eastsa02Amy Eastsa03Afy EdToh Epsilon01Afy Epsilon01Amy Epsilon02Amy ExArmy01 ExecutivePaFemale01 ExecutivePaFemale02 ExecutivePaMale01 Fabien FabienCutscene Factory01Sfy Factory01Smy Famca01Gmy Famdd01 Famdnf01Gmy Famfor01Gmy Families01Gfy Farmer01Amm FatBla01Afm FatCult01Afm Fatlatin01Amm FatWhite01Afm FbiSuit01 FbiSuit01Cutscene FemaleAgent FemBarberSfm FibArchitect FibMugger01 FibOffice01Smm FibOffice02Smm FibSec01 FibSec01Smm FilmDirector FilmNoir Finguru01 Fireman01Smy Fish Fitness01Afy Fitness02Afy Floyd FloydCutscene ForgeryFemale01 ForgeryMale01 FosRepCutscene Franklin FreemodeFemale01 FreemodeMale01 G Gaffer01Smm GarbageSmy Gardener01Smm Gay01Amy Gay02Amy GCutscene Genfat01Amm Genfat02Amm Genhot01Afy Genstreet01Afo Genstreet01Amo Genstreet01Amy Genstreet02Amy GentransportSmm Glenstank01 Golfer01Afy Golfer01Amm Golfer01Amy Griff01 Grip01Smy Groom GroomCutscene GroveStrDlrCutscene GuadalopeCutscene Guido01 GunVend01 GurkCutscene Hacker Hairdress01Smm HammerShark Hao HaoCutscene Hasjew01Amm Hasjew01Amy HeliStaff01 Hen Highsec01Smm Highsec02Smm Hiker01Afy Hiker01Amy Hillbilly01Amm Hillbilly02Amm Hippie01 Hippie01Afy Hippy01Amy Hipster01Afy Hipster01Amy Hipster02Afy Hipster02Amy Hipster03Afy Hipster03Amy Hipster04Afy Hooker01Sfy Hooker02Sfy Hooker03Sfy Hotposh01 HughCutscene Humpback Hunter HunterCutscene Husky Hwaycop01Smy IgDix IgdjBlaMadon IgdjBlamRupert IgdjBlamRyanH IgdjBlamRyanS IgdjDixManager IgdjGeneric01 IgdjSolFotios IgdjSolJakob IgdjSolManager IgdjSolMike IgdjSolRobT IgdjTalAurelia IgdjTalIgnazio IgEnglishDave IgJimmyBoston02 IgKerryMcIntosh02 IgLaceyJones02 IgLazlow2 IgSacha IgSol IgTalCc IgTalMm IgTonyPrince IgTylerDix02 Imporage ImportExportFemale01 ImportExportMale01 ImranCutscene Indian01Afo Indian01Afy Indian01Amm Indian01Amy JackHowitzerCutscene Janet JanetCutscene JanitorCutscene JanitorSmm JayNorris Jesus01 Jetski01Amy Jewelass Jewelass01 JewelassCutscene JewelSec01 JewelThief JimmyBoston JimmyBostonCutscene JimmyDisanto JimmyDisantoCutscene JoeMinuteman JoeMinutemanCutscene JohnnyKlebitz JohnnyKlebitzCutscene Josef JosefCutscene Josh JoshCutscene Juggalo01Afy Juggalo01Amy Juggernaut01 Justin KarenDaniels KarenDanielsCutscene KerryMcintosh KillerWhale KorBoss01Gmm Korean01Gmy Korean02Gmy KorLieut01Gmy Ktown01Afm Ktown01Afo Ktown01Amm Ktown01Amo Ktown01Amy Ktown02Afm Ktown02Amy LamarDavis LamarDavisCutscene Lathandy01Smm Latino01Amy Lazlow LazlowCutscene LesterCrest LesterCrest2 LesterCrest2Cutscene LesterCrestCutscene Lifeinvad01 Lifeinvad01Cutscene Lifeinvad01Smm Lifeinvad02 LinecookSmm Lost01Gfy Lost01Gmy Lost02Gmy Lost03Gmy Lsmetro01Smm Magenta MagentaCutscene Maid01Sfm Malc MaleCorpse Malibu01Amm Mani Manuel ManuelCutscene Mariachi01Smm Marine01Smm Marine01Smy Marine02Smm Marine02Smy Marine03Smy Markfost Marnie MarnieCutscene Marston01 MartinMadrazoCutscene MaryAnn MaryannCutscene Maude MaudeCutscene MerryWeatherCutscene MethFemale01 Methhead01Amy MethMale01 MexBoss01Gmm MexBoss02Gmm MexCntry01Amm MexGang01Gmy MexGoon01Gmy MexGoon02Gmy MexGoon03Gmy MexLabor01Amm MexThug01Amy Michael Michelle MichelleCutscene Migrant01Sfy Migrant01Smm MilitaryBum Milton MiltonCutscene MimeSmy Miranda Mistress Misty01 Molly MollyCutscene Motox01Amy Motox02Amy MountainLion MovAlien01 MoviePremFemaleCutscene MoviePremMaleCutscene MovieStar MovPrem01Sfy Movprem01Smm Movspace01Smm MpAvonGoon MpBogdanGoon MpFBennyMech01 MPros01 MrK MrKCutscene MrsPhillips MrsPhillipsCutscene MrsRCutscene MrsThornhill MrsThornhillCutscene Musclbeac01Amy Musclbeac02Amy Natalia NataliaCutscene NervousRon NervousRonCutscene Nigel NigelCutscene Niko01 OgBoss01Amm OldMan1A OldMan1ACutscene OldMan2 OldMan2Cutscene Omega OmegaCutscene ONeil Orleans OrleansCutscene Ortega OrtegaCutscene OscarCutscene Paige PaigeCutscene Paparazzi Paparazzi01Amm Paper PaperCutscene Paramedic01Smm Party01 PartyTarget Patricia PatriciaCutscene PestCont01Smy PestContDriver PestContGunman Pig Pigeon Pilot01Smm Pilot01Smy Pilot02Smm Pogo01 PoloGoon01Gmy PoloGoon02Gmy Polynesian01Amm Polynesian01Amy Poodle Popov PopovCutscene Poppymich PornDudesCutscene Postal01Smm Postal02Smm Priest PriestCutscene Princess Prisguard01Smm PrisMuscl01Smy Prisoner01 Prisoner01Smy PrologueDriver PrologueDriverCutscene PrologueHostage01 PrologueHostage01Afm PrologueHostage01Amm PrologueMournFemale01 PrologueMournMale01 PrologueSec01 PrologueSec01Cutscene PrologueSec02 PrologueSec02Cutscene Pug Rabbit RampGang RampGangCutscene RampHic RampHicCutscene RampHipster RampHipsterCutscene RampMarineCutscene RampMex RampMexCutscene Ranger01Sfy Ranger01Smy Rashkovsky RashkovskyCutscene Rat ReporterCutscene Retriever Rhesus RivalPaparazzi Roadcyc01Amy Robber01Smy RoccoPelosi RoccoPelosiCutscene Rottweiler RsRanger01Amo Runner01Afy Runner01Amy Runner02Amy Rurmeth01Afy Rurmeth01Amm RussianDrunk RussianDrunkCutscene Salton01Afm Salton01Afo Salton01Amm Salton01Amo Salton01Amy Salton02Amm Salton03Amm Salton04Amm SalvaBoss01Gmy SalvaGoon01Gmy SalvaGoon02Gmy SalvaGoon03Gmy SbikeAmo Scdressy01Afy Scientist01Smm ScreenWriter ScreenWriterCutscene Scrubs01Sfy Seagull Security01Smm SecuroGuardMale01 SfyClubBar01 Shepherd Sheriff01Sfy Sheriff01Smy ShopHighSfm ShopKeep01 ShopLowSfy ShopMaskSmy ShopMidSfy SiemonYetarian SiemonYetarianCutscene Skater01Afy Skater01Amm Skater01Amy Skater02Amy Skidrow01Afm Skidrow01Amm SmugMech01 SmyClubBar01 SmyWareTech01 Snowcop01Smm Socenlat01Amm Solomon SolomonCutscene Soucent01Afm Soucent01Afo Soucent01Afy Soucent01Amm Soucent01Amo Soucent01Amy Soucent02Afm Soucent02Afo Soucent02Afy Soucent02Amm Soucent02Amo Soucent02Amy Soucent03Afy Soucent03Amm Soucent03Amo Soucent03Amy Soucent04Amm Soucent04Amy Soucentmc01Afm SpyActor SpyActress Staggrm01Amo Stbla01Amy Stbla02Amy SteveHains SteveHainsCutscene Stingray Stlat01Amy Stlat02Amm StreetArt01 Stretch StretchCutscene Stripper01Cutscene Stripper01Sfy Stripper02Cutscene Stripper02Sfy StripperLite StripperLiteSfy Strperf01Smm Strpreach01Smm StrPunk01Gmy StrPunk02Gmy Strvend01Smm Strvend01Smy Stwhi01Amy Stwhi02Amy Sunbathe01Amy Surfer01Amy Swat01Smy Sweatshop01Sfm Sweatshop01Sfy Talina Tanisha TanishaCutscene TaoCheng TaoChengCutscene TaosTranslator TaosTranslatorCutscene Taphillbilly Tattoo01Amo Tennis01Afy Tennis01Amm TennisCoach TennisCoachCutscene Terry TerryCutscene TigerShark TomCutscene TomEpsilon TomEpsilonCutscene Tonya TonyaCutscene Topless01Afy Tourist01Afm Tourist01Afy Tourist01Amm Tourist02Afy TracyDisanto TracyDisantoCutscene TrafficWarden TrafficWardenCutscene Tramp01 Tramp01Afm Tramp01Amm Tramp01Amo TrampBeac01Afm TrampBeac01Amm Tranvest01Amm Tranvest02Amm Trevor Trucker01Smm TylerDixon UfmMiranda02 UfyDanceBurl01 UfyDanceLthr01 UfyDanceRave01 UfyPoppyMich02 UmyDanceBurl01 UmyDanceLthr01 UmyDanceRave01 UndercoverCopCutscene Ups01Smm Ups02Smm Uscg01Smy Vagos01Gfy VagosFun01 VagosSpeak VagosSpeakCutscene Valet01Smy Vindouche01Amy Vinewood01Afy Vinewood01Amy Vinewood02Afy Vinewood02Amy Vinewood03Afy Vinewood03Amy Vinewood04Afy Vinewood04Amy Wade WadeCutscene Waiter01Smy WareMechMale01 WeaponExpertMale01 WeaponWorkerMale01 WeedFemale01 WeedMale01 WeiCheng WeiChengCutscene Westy WillyFist WinClean01Smy Xmech01Smy Xmech02Smy Xmech02Smymp Yoga01Afy Yoga01Amy Zimbor ZimborCutscene Zombie01"
  },
  "api/AlternateLife.RageMP.Net.Scripting.PlayerDamageDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.PlayerDamageDelegate.html",
    "title": "Delegate PlayerDamageDelegate",
    "keywords": "Delegate PlayerDamageDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task PlayerDamageDelegate(IPlayer player, float healthLoss, float armorLoss); Parameters Type Name Description IPlayer player System.Single healthLoss System.Single armorLoss Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Scripting.PlayerCreateWaypointDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.PlayerCreateWaypointDelegate.html",
    "title": "Delegate PlayerCreateWaypointDelegate",
    "keywords": "Delegate PlayerCreateWaypointDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task PlayerCreateWaypointDelegate(IPlayer player, Vector3 position); Parameters Type Name Description IPlayer player Vector3 position Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Exceptions.html": {
    "href": "api/AlternateLife.RageMP.Net.Exceptions.html",
    "title": "Namespace AlternateLife.RageMP.Net.Exceptions",
    "keywords": "Namespace AlternateLife.RageMP.Net.Exceptions Classes EntityDeletedException"
  },
  "api/AlternateLife.RageMP.Net.Enums.html": {
    "href": "api/AlternateLife.RageMP.Net.Enums.html",
    "title": "Namespace AlternateLife.RageMP.Net.Enums",
    "keywords": "Namespace AlternateLife.RageMP.Net.Enums Enums AnimationFlags ClothSlot ColshapeType DeathReason DisconnectReason EntityType LogLevel MarkerType MaterialType PedHash PropSlot VehicleHash WeaponHash WeatherType"
  },
  "api/AlternateLife.RageMP.Net.Scripting.PlayerReadyDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.PlayerReadyDelegate.html",
    "title": "Delegate PlayerReadyDelegate",
    "keywords": "Delegate PlayerReadyDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task PlayerReadyDelegate(IPlayer player); Parameters Type Name Description IPlayer player Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Interfaces.ITextLabel.html": {
    "href": "api/AlternateLife.RageMP.Net.Interfaces.ITextLabel.html",
    "title": "Interface ITextLabel",
    "keywords": "Interface ITextLabel Inherited Members IEntity.NativePointer IEntity.Exists IEntity.Id IEntity.Type IEntity.Model IEntity.Alpha IEntity.Dimension IEntity.Position IEntity.Rotation IEntity.Velocity IEntity.Destroy() IEntity.TryGetSharedData(String, Object) IEntity.SetSharedData(String, Object) IEntity.SetSharedData(IDictionary<String, Object>) IEntity.HasSharedData(String) IEntity.ResetSharedData(String) IEntity.TryGetData(String, Object) IEntity.SetData(String, Object) IEntity.SetData(IDictionary<String, Object>) IEntity.HasData(String) IEntity.ResetData(String) IEntity.ClearData() Namespace : AlternateLife.RageMP.Net.Interfaces Assembly : AlternateLife.RageMP.Net.dll Syntax public interface ITextLabel : IEntity Properties | Improve this Doc View Source Color Get or set the color of the text label. Declaration ColorRgba Color { get; set; } Property Value Type Description ColorRgba Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source DrawDistance Get or set the draw distance of the text label. Declaration float DrawDistance { get; set; } Property Value Type Description System.Single Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Font Get or set the font of the text label. Declaration uint Font { get; set; } Property Value Type Description System.UInt32 Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source LOS Get or set the line of sight state of the text label. Declaration bool LOS { get; set; } Property Value Type Description System.Boolean Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Text Get or set the text of the text label. Declaration string Text { get; set; } Property Value Type Description System.String Exceptions Type Condition EntityDeletedException This entity was deleted before"
  },
  "api/AlternateLife.RageMP.Net.Interfaces.ICheckpoint.html": {
    "href": "api/AlternateLife.RageMP.Net.Interfaces.ICheckpoint.html",
    "title": "Interface ICheckpoint",
    "keywords": "Interface ICheckpoint Inherited Members IEntity.NativePointer IEntity.Exists IEntity.Id IEntity.Type IEntity.Model IEntity.Alpha IEntity.Dimension IEntity.Position IEntity.Rotation IEntity.Velocity IEntity.Destroy() IEntity.TryGetSharedData(String, Object) IEntity.SetSharedData(String, Object) IEntity.SetSharedData(IDictionary<String, Object>) IEntity.HasSharedData(String) IEntity.ResetSharedData(String) IEntity.TryGetData(String, Object) IEntity.SetData(String, Object) IEntity.SetData(IDictionary<String, Object>) IEntity.HasData(String) IEntity.ResetData(String) IEntity.ClearData() Namespace : AlternateLife.RageMP.Net.Interfaces Assembly : AlternateLife.RageMP.Net.dll Syntax public interface ICheckpoint : IEntity Properties | Improve this Doc View Source Color Get or set the color of the checkpoint. Declaration ColorRgba Color { get; set; } Property Value Type Description ColorRgba Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Direction Get or set the direction of the checkpoint. Declaration Vector3 Direction { get; set; } Property Value Type Description Vector3 Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source IsVisible Get or set if the checkpoint is visible. Declaration bool IsVisible { get; set; } Property Value Type Description System.Boolean Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Radius Get or set the radius of the checkpoint. Declaration float Radius { get; set; } Property Value Type Description System.Single Exceptions Type Condition EntityDeletedException This entity was deleted before Methods | Improve this Doc View Source HideFor(IEnumerable<IPlayer>) Hide checkpoint for a list of players. Declaration void HideFor(IEnumerable<IPlayer> players) Parameters Type Name Description IEnumerable < IPlayer > players List of players to hide the checkpoint for Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source ShowFor(IEnumerable<IPlayer>) Show checkpoint for a list of players. Declaration void ShowFor(IEnumerable<IPlayer> players) Parameters Type Name Description IEnumerable < IPlayer > players List of players to show the checkpoint for Exceptions Type Condition EntityDeletedException This entity was deleted before"
  },
  "api/AlternateLife.RageMP.Net.Scripting.VehicleDamageDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.VehicleDamageDelegate.html",
    "title": "Delegate VehicleDamageDelegate",
    "keywords": "Delegate VehicleDamageDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task VehicleDamageDelegate(IVehicle vehicle, float bodyHealthLoss, float engineHealthLoss); Parameters Type Name Description IVehicle vehicle System.Single bodyHealthLoss System.Single engineHealthLoss Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Scripting.PlayerEnterColshapeDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.PlayerEnterColshapeDelegate.html",
    "title": "Delegate PlayerEnterColshapeDelegate",
    "keywords": "Delegate PlayerEnterColshapeDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task PlayerEnterColshapeDelegate(IPlayer player, IColshape colshapePointer); Parameters Type Name Description IPlayer player IColshape colshapePointer Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Interfaces.IVehicle.html": {
    "href": "api/AlternateLife.RageMP.Net.Interfaces.IVehicle.html",
    "title": "Interface IVehicle",
    "keywords": "Interface IVehicle Inherited Members IEntity.NativePointer IEntity.Exists IEntity.Id IEntity.Type IEntity.Model IEntity.Alpha IEntity.Dimension IEntity.Position IEntity.Rotation IEntity.Velocity IEntity.Destroy() IEntity.TryGetSharedData(String, Object) IEntity.SetSharedData(String, Object) IEntity.SetSharedData(IDictionary<String, Object>) IEntity.HasSharedData(String) IEntity.ResetSharedData(String) IEntity.TryGetData(String, Object) IEntity.SetData(String, Object) IEntity.SetData(IDictionary<String, Object>) IEntity.HasData(String) IEntity.ResetData(String) IEntity.ClearData() Namespace : AlternateLife.RageMP.Net.Interfaces Assembly : AlternateLife.RageMP.Net.dll Syntax public interface IVehicle : IEntity Properties | Improve this Doc View Source AreHighbeamsActive Get or set the highbeams state of the vehicle. Declaration bool AreHighbeamsActive { get; set; } Property Value Type Description System.Boolean Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source AreLightsActive Get or set the lights state of the vehicle. Declaration bool AreLightsActive { get; set; } Property Value Type Description System.Boolean Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source AreNeonsActive Get or set the neons state of the vehicle. Declaration bool AreNeonsActive { get; set; } Property Value Type Description System.Boolean Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source AreTaxiLightsActive Get or set the taxi lights state of the vehicle. Declaration bool AreTaxiLightsActive { get; set; } Property Value Type Description System.Boolean Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source BodyHealth Get the body health of the vehicle. Declaration float BodyHealth { get; } Property Value Type Description System.Single Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source DashboardColor Get or set the dashboard color of the vehicle. Declaration uint DashboardColor { get; set; } Property Value Type Description System.UInt32 Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source EngineHealth Get the engine health of the vehicle. Declaration float EngineHealth { get; } Property Value Type Description System.Single Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GasPedalState Get the gas padel state of the vehicle. Declaration float GasPedalState { get; } Property Value Type Description System.Single Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Heading Get the heading of the vehicle. Declaration float Heading { get; } Property Value Type Description System.Single Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source IsBreakActive Get the break state of the vehicle. Declaration bool IsBreakActive { get; } Property Value Type Description System.Boolean Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source IsDead Get if the vehicle is dead. Declaration bool IsDead { get; } Property Value Type Description System.Boolean Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source IsEngineActive Get or set the engine state of the vehicle. Declaration bool IsEngineActive { get; set; } Property Value Type Description System.Boolean Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source IsHornActive Get or set the horn state of the vehicle. Declaration bool IsHornActive { get; } Property Value Type Description System.Boolean Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source IsLocked Get or set the lock state of the vehicle. Declaration bool IsLocked { get; set; } Property Value Type Description System.Boolean Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source IsRocketBoostActive Get the rocket boost state of the vehicle. Declaration bool IsRocketBoostActive { get; } Property Value Type Description System.Boolean Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source IsSirenActive Get or set the siren state of the vehicle. Declaration bool IsSirenActive { get; set; } Property Value Type Description System.Boolean Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Livery Get or set the livery of the vehicle. Declaration uint Livery { get; set; } Property Value Type Description System.UInt32 Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source MaterialType Get the material type of the vehicle. Declaration MaterialType MaterialType { get; } Property Value Type Description MaterialType Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source MovableState Get the movable state of the vehicle. Declaration float MovableState { get; } Property Value Type Description System.Single Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source NeonsColor Get or set the neons color of the vehicle. Declaration ColorRgba NeonsColor { get; set; } Property Value Type Description ColorRgba Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source NumberPlate Get or set the number plate of the vehicle. Declaration string NumberPlate { get; set; } Property Value Type Description System.String Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source NumberPlateType Get or set the number plate type of the vehicle. Declaration uint NumberPlateType { get; set; } Property Value Type Description System.UInt32 Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source PearlescentColor Get or set the pearlescent color of the vehicle. Declaration uint PearlescentColor { get; set; } Property Value Type Description System.UInt32 Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Quaternion Get the quaternion rotation of the vehicle. Declaration Quaternion Quaternion { get; } Property Value Type Description Quaternion Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SteerAngle Get the steering angle of the vehicle. Declaration float SteerAngle { get; } Property Value Type Description System.Single Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Trailer Get the trailer instance of the vehicle. Declaration IVehicle Trailer { get; } Property Value Type Description IVehicle Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source TraileredBy Get the trailered by instance of the vehicle. Declaration IVehicle TraileredBy { get; } Property Value Type Description IVehicle Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source TrimColor Get or set the trim color of the vehicle. Declaration uint TrimColor { get; set; } Property Value Type Description System.UInt32 Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source WheelColor Get or set the wheel color of the vehicle. Declaration uint WheelColor { get; set; } Property Value Type Description System.UInt32 Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source WheelType Get or set the wheel type of the vehicle. Declaration uint WheelType { get; set; } Property Value Type Description System.UInt32 Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source WindowTint Get or set the window tint of the vehicle. Declaration uint WindowTint { get; set; } Property Value Type Description System.UInt32 Exceptions Type Condition EntityDeletedException This entity was deleted before Methods | Improve this Doc View Source Explode() Explode the vehicle. Declaration void Explode() Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetColor(Int32) Get color number of the given color slot. Declaration int GetColor(int id) Parameters Type Name Description System.Int32 id Slot of the color Returns Type Description System.Int32 Value of the color id Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetColor(UInt32) Get color number of the given color slot. Declaration uint GetColor(uint id) Parameters Type Name Description System.UInt32 id Slot of the color Returns Type Description System.UInt32 Value of the color id Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetColorRgb(Int32) Get the color of the given color slot. Declaration ColorRgba GetColorRgb(int colorSlot) Parameters Type Name Description System.Int32 colorSlot Slot of the color Returns Type Description ColorRgba ColorRgba of the vehicle at the given colorSlot Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetColorRgb(UInt32) Get the color of the given color slot. Declaration ColorRgba GetColorRgb(uint colorSlot) Parameters Type Name Description System.UInt32 colorSlot Slot of the color Returns Type Description ColorRgba ColorRgba of the vehicle at the given colorSlot Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetExtra(Int32) Check if the extra is set on the vehicle. Declaration bool GetExtra(int id) Parameters Type Name Description System.Int32 id Slot of the extra Returns Type Description System.Boolean True if the id is set, otherwise false Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetExtra(UInt32) Check if the extra is set on the vehicle. Declaration bool GetExtra(uint id) Parameters Type Name Description System.UInt32 id Slot of the extra Returns Type Description System.Boolean True if the id is set, otherwise false Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetMod(Int32) Get the value of a modification slot. Declaration int GetMod(int id) Parameters Type Name Description System.Int32 id Slot of the modification Returns Type Description System.Int32 Value of the modification id Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetMod(UInt32) Get the value of a modification slot. Declaration uint GetMod(uint id) Parameters Type Name Description System.UInt32 id Slot of the modification Returns Type Description System.UInt32 Value of the modification id Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetOccupant(Int32) Get player on given seat in the vehicle. Declaration IPlayer GetOccupant(int seat) Parameters Type Name Description System.Int32 seat Seat of the vehicle Returns Type Description IPlayer IPlayer on the seat or null if the seat is empty Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetOccupantsAsync() Get all occupants in the vehicle. Declaration Task<IReadOnlyCollection<IPlayer>> GetOccupantsAsync() Returns Type Description Task < IReadOnlyCollection < IPlayer >> Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetPaint(Int32) Get paint of the given color slot. Declaration int GetPaint(int id) Parameters Type Name Description System.Int32 id Slot of the paint Returns Type Description System.Int32 Value of the color id Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetPaint(UInt32) Get paint of the given color slot. Declaration uint GetPaint(uint id) Parameters Type Name Description System.UInt32 id Slot of the paint Returns Type Description System.UInt32 Value of the color id Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetStreamedPlayersAsync() Get all streamed players for the vehicle. Declaration Task<IReadOnlyCollection<IPlayer>> GetStreamedPlayersAsync() Returns Type Description Task < IReadOnlyCollection < IPlayer >> Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source IsStreamed(IPlayer) Check if the vehicle is streamed for given player. Declaration bool IsStreamed(IPlayer forPlayer) Parameters Type Name Description IPlayer forPlayer Player to check for Returns Type Description System.Boolean True if the vehicle is streamed for given forPlayer , otherwise false Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Repair() Repair the vehicle. Declaration void Repair() Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetColor(Int32, Int32) Set the primary and secondary color of the vehicle. Declaration void SetColor(int primary, int secondary) Parameters Type Name Description System.Int32 primary Primary color number of the vehicle System.Int32 secondary Secondary color number of the vehicle Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetColor(UInt32, UInt32) Set the primary and secondary color of the vehicle. Declaration void SetColor(uint primary, uint secondary) Parameters Type Name Description System.UInt32 primary Primary color number of the vehicle System.UInt32 secondary Secondary color number of the vehicle Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetColorRgb(ColorRgba, ColorRgba) Set the color of the vehicle. Declaration void SetColorRgb(ColorRgba primaryColor, ColorRgba secondaryColor) Parameters Type Name Description ColorRgba primaryColor Primary rgb color of the vehicle ColorRgba secondaryColor Secondary rgb color of the vehicle Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetExtra(Int32, Boolean) Set the extra on the vehicle. Declaration void SetExtra(int id, bool state) Parameters Type Name Description System.Int32 id Slot of the extra System.Boolean state State of the extra Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetExtra(UInt32, Boolean) Set the extra on the vehicle. Declaration void SetExtra(uint id, bool state) Parameters Type Name Description System.UInt32 id Slot of the extra System.Boolean state State of the extra Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetMod(Int32, Int32) Set the value of a modification slot. Declaration void SetMod(int id, int mod) Parameters Type Name Description System.Int32 id Slot of the modification System.Int32 mod Value of the modification id Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetMod(UInt32, UInt32) Set the value of a modification slot. Declaration void SetMod(uint id, uint mod) Parameters Type Name Description System.UInt32 id Slot of the modification System.UInt32 mod Value of the modification id Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetOccupant(Int32, IPlayer) Set player on given seat in the vehicle. Declaration void SetOccupant(int seat, IPlayer player) Parameters Type Name Description System.Int32 seat Seat of the vehicle IPlayer player Player to place on the seat Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetPaint(PaintData, PaintData) Set the primary and secondary paint of the vehicle. Declaration void SetPaint(PaintData primary, PaintData secondary) Parameters Type Name Description PaintData primary Primary paint of the vehicle PaintData secondary Secondary paint of the vehicle Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Spawn(Vector3, Single) Spawn the vehicle at given position. Declaration void Spawn(Vector3 position, float heading) Parameters Type Name Description Vector3 position Position to spawn the vehicle at System.Single heading Heading to spawn the vehicle with Exceptions Type Condition EntityDeletedException This entity was deleted before"
  },
  "api/AlternateLife.RageMP.Net.Enums.AnimationFlags.html": {
    "href": "api/AlternateLife.RageMP.Net.Enums.AnimationFlags.html",
    "title": "Enum AnimationFlags",
    "keywords": "Enum AnimationFlags Namespace : AlternateLife.RageMP.Net.Enums Assembly : AlternateLife.RageMP.Net.dll Syntax public enum AnimationFlags : int Fields Name Description AllowPlayerControl Cancellable Loop OnlyAnimateUpperBody StopOnLastFrame"
  },
  "api/AlternateLife.RageMP.Net.Data.HeadOverlayData.html": {
    "href": "api/AlternateLife.RageMP.Net.Data.HeadOverlayData.html",
    "title": "Struct HeadOverlayData",
    "keywords": "Struct HeadOverlayData Namespace : AlternateLife.RageMP.Net.Data Assembly : AlternateLife.RageMP.Net.dll Syntax public struct HeadOverlayData Constructors | Improve this Doc View Source HeadOverlayData(UInt32, Single, UInt32, UInt32) Declaration public HeadOverlayData(uint index, float opacity, uint colorId, uint secondaryColorId) Parameters Type Name Description System.UInt32 index System.Single opacity System.UInt32 colorId System.UInt32 secondaryColorId Fields | Improve this Doc View Source ColorId Declaration public uint ColorId Field Value Type Description System.UInt32 | Improve this Doc View Source Index Declaration public uint Index Field Value Type Description System.UInt32 | Improve this Doc View Source Opacity Declaration public float Opacity Field Value Type Description System.Single | Improve this Doc View Source SecondaryColorId Declaration public uint SecondaryColorId Field Value Type Description System.UInt32"
  },
  "api/AlternateLife.RageMP.Net.Scripting.PlayerStreamInDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.PlayerStreamInDelegate.html",
    "title": "Delegate PlayerStreamInDelegate",
    "keywords": "Delegate PlayerStreamInDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task PlayerStreamInDelegate(IPlayer player, IPlayer forPlayer); Parameters Type Name Description IPlayer player IPlayer forPlayer Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Scripting.PlayerStartExitVehicleDelegate.html": {
    "href": "api/AlternateLife.RageMP.Net.Scripting.PlayerStartExitVehicleDelegate.html",
    "title": "Delegate PlayerStartExitVehicleDelegate",
    "keywords": "Delegate PlayerStartExitVehicleDelegate Namespace : AlternateLife.RageMP.Net.Scripting Assembly : AlternateLife.RageMP.Net.dll Syntax public delegate Task PlayerStartExitVehicleDelegate(IPlayer player, IVehicle vehicle); Parameters Type Name Description IPlayer player IVehicle vehicle Returns Type Description Task"
  },
  "api/AlternateLife.RageMP.Net.Data.TimeData.html": {
    "href": "api/AlternateLife.RageMP.Net.Data.TimeData.html",
    "title": "Struct TimeData",
    "keywords": "Struct TimeData Namespace : AlternateLife.RageMP.Net.Data Assembly : AlternateLife.RageMP.Net.dll Syntax public struct TimeData Constructors | Improve this Doc View Source TimeData(Byte, Byte, Byte) Declaration public TimeData(byte hour, byte minute, byte second) Parameters Type Name Description System.Byte hour System.Byte minute System.Byte second Methods | Improve this Doc View Source GetHour() Declaration public byte GetHour() Returns Type Description System.Byte | Improve this Doc View Source GetMinute() Declaration public byte GetMinute() Returns Type Description System.Byte | Improve this Doc View Source GetSecond() Declaration public byte GetSecond() Returns Type Description System.Byte"
  },
  "api/AlternateLife.RageMP.Net.Interfaces.IPlayer.html": {
    "href": "api/AlternateLife.RageMP.Net.Interfaces.IPlayer.html",
    "title": "Interface IPlayer",
    "keywords": "Interface IPlayer Inherited Members IEntity.NativePointer IEntity.Exists IEntity.Id IEntity.Type IEntity.Alpha IEntity.Dimension IEntity.Position IEntity.Rotation IEntity.Velocity IEntity.Destroy() IEntity.TryGetSharedData(String, Object) IEntity.SetSharedData(String, Object) IEntity.SetSharedData(IDictionary<String, Object>) IEntity.HasSharedData(String) IEntity.ResetSharedData(String) IEntity.TryGetData(String, Object) IEntity.SetData(String, Object) IEntity.SetData(IDictionary<String, Object>) IEntity.HasData(String) IEntity.ResetData(String) IEntity.ClearData() Namespace : AlternateLife.RageMP.Net.Interfaces Assembly : AlternateLife.RageMP.Net.dll Syntax public interface IPlayer : IEntity Properties | Improve this Doc View Source ActionString Get the action string of the vehicle. Declaration string ActionString { get; } Property Value Type Description System.String Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source AimingAt Get the position player is aiming at. Declaration Vector3 AimingAt { get; } Property Value Type Description Vector3 Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Armor Get or set the armor of the player. Declaration float Armor { get; set; } Property Value Type Description System.Single Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source CurrentWeapon Get or set the weapon the player has equipped. Declaration uint CurrentWeapon { get; set; } Property Value Type Description System.UInt32 Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source CurrentWeaponAmmo Get or set the ammo of the current weapon. Declaration uint CurrentWeaponAmmo { get; set; } Property Value Type Description System.UInt32 Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source EyeColor Get or set the eye color of the vehicle. Declaration uint EyeColor { get; set; } Property Value Type Description System.UInt32 Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source HairColor Get the hair color of the vehicle. Declaration uint HairColor { get; } Property Value Type Description System.UInt32 Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source HairHighlightColor Get the highlight color of the vehicle. Declaration uint HairHighlightColor { get; } Property Value Type Description System.UInt32 Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source HeadBlend Get or set the HeadBlendData of the vehicle. Declaration HeadBlendData HeadBlend { get; set; } Property Value Type Description HeadBlendData Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Heading Get or set the heading of the player. Declaration float Heading { get; set; } Property Value Type Description System.Single Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Health Get or set the health of the player. Declaration float Health { get; set; } Property Value Type Description System.Single Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Ip Get the ip of the player. Declaration string Ip { get; } Property Value Type Description System.String Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source IsAiming Check if the player is aiming. Declaration bool IsAiming { get; } Property Value Type Description System.Boolean Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source IsClimbing Check if the player is climbing. Declaration bool IsClimbing { get; } Property Value Type Description System.Boolean Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source IsEnteringVehicle Check if the player is entering a vehicle. Declaration bool IsEnteringVehicle { get; } Property Value Type Description System.Boolean Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source IsInCover Check if the player is in cover. Declaration bool IsInCover { get; } Property Value Type Description System.Boolean Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source IsInMelee Check if the player is in melee. Declaration bool IsInMelee { get; } Property Value Type Description System.Boolean Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source IsInVehicle Check if the player is in any vehicle. Declaration bool IsInVehicle { get; } Property Value Type Description System.Boolean Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source IsJumping Check if the player is jumping. Declaration bool IsJumping { get; } Property Value Type Description System.Boolean Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source IsLeavingVehicle Check if the player is leaving a vehicle. Declaration bool IsLeavingVehicle { get; } Property Value Type Description System.Boolean Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source IsOnLadder Check if the player is on a ladder. Declaration bool IsOnLadder { get; } Property Value Type Description System.Boolean Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source IsReloading Check if the player is reloading. Declaration bool IsReloading { get; } Property Value Type Description System.Boolean Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source KickReason Get the kick reason of the player. Declaration string KickReason { get; } Property Value Type Description System.String Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Model Get or set the model of the player. Declaration PedHash Model { get; set; } Property Value Type Description PedHash Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source MoveSpeed Get the move speed of the player. Declaration float MoveSpeed { get; } Property Value Type Description System.Single Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Name Get or set the name of the player. Declaration string Name { get; set; } Property Value Type Description System.String Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source PacketLoss Get the packet loss of the player. Declaration float PacketLoss { get; } Property Value Type Description System.Single Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Ping Get the ping of the player. Declaration int Ping { get; } Property Value Type Description System.Int32 Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Seat Get the seat the player is on. Declaration int Seat { get; } Property Value Type Description System.Int32 Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Serial Get the serial of the player. Declaration string Serial { get; } Property Value Type Description System.String | Improve this Doc View Source SocialClubName Get the social club name of the player. Declaration string SocialClubName { get; } Property Value Type Description System.String Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Vehicle Get the IVehicle the player is in or null if not in any vehicle. Declaration IVehicle Vehicle { get; } Property Value Type Description IVehicle Exceptions Type Condition EntityDeletedException This entity was deleted before Methods | Improve this Doc View Source BanAsync(String) Ban the player. Declaration Task BanAsync(string reason = null) Parameters Type Name Description System.String reason Reason the player is banned Returns Type Description Task Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source CallAsync(String, IEnumerable<Object>) Send an event to the player. Declaration Task CallAsync(string eventName, IEnumerable<object> arguments) Parameters Type Name Description System.String eventName Name of the event IEnumerable < System.Object > arguments Arguments of the event Returns Type Description Task Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source CallAsync(String, Object[]) Send an event to the player. Declaration Task CallAsync(string eventName, params object[] arguments) Parameters Type Name Description System.String eventName Name of the event System.Object [] arguments Arguments of the event Returns Type Description Task Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source CallHashAsync(UInt64, IEnumerable<Object>) Send an event to the player. Declaration Task CallHashAsync(ulong eventHash, IEnumerable<object> arguments) Parameters Type Name Description System.UInt64 eventHash Hash of the event IEnumerable < System.Object > arguments Arguments of the event Returns Type Description Task Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source CallHashAsync(UInt64, Object[]) Send an event to the player. Declaration Task CallHashAsync(ulong eventHash, params object[] arguments) Parameters Type Name Description System.UInt64 eventHash Hash of the event System.Object [] arguments Arguments of the event Returns Type Description Task Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source ClearDecorations() Removes all applied decorations from the player. Declaration void ClearDecorations() Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source DisableVoiceToAsync(IPlayer) Disable the current players voice from the specified target player Declaration Task DisableVoiceToAsync(IPlayer target) Parameters Type Name Description IPlayer target Player that should not hear the current players voice anymore. Returns Type Description Task Exceptions Type Condition EntityDeletedException target or this entity was deleted before | Improve this Doc View Source EnableVoiceToAsync(IPlayer) Enable the current players voice to the specified target player. Declaration Task EnableVoiceToAsync(IPlayer target) Parameters Type Name Description IPlayer target player that should listen the current players voice Returns Type Description Task Exceptions Type Condition EntityDeletedException target or this entity was deleted before | Improve this Doc View Source Eval(String) Run code on the player. WARNING: Use this at your own risk. Declaration void Eval(string code) Parameters Type Name Description System.String code Code to execute on the player Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetCloth(ClothSlot) Get cloth of the player at given slot. Declaration ClothData GetCloth(ClothSlot slot) Parameters Type Name Description ClothSlot slot Slot of the cloth Returns Type Description ClothData ClothSlot of the player Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetCloth(Int32) Get cloth of the player at given slot. Declaration ClothData GetCloth(int slot) Parameters Type Name Description System.Int32 slot Slot of the cloth Returns Type Description ClothData ClothSlot of the player Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetDecoration(Int32) Get the decoration of the player at given collection. Declaration int GetDecoration(int collection) Parameters Type Name Description System.Int32 collection Collection of the decoration Returns Type Description System.Int32 Decoration of the player Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetDecoration(UInt32) Get the decoration of the player at given collection. Declaration uint GetDecoration(uint collection) Parameters Type Name Description System.UInt32 collection Collection of the decoration Returns Type Description System.UInt32 Decoration of the player Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetFaceFeature(Int32) Get a face feature of the player. Declaration float GetFaceFeature(int id) Parameters Type Name Description System.Int32 id Slot of the face feature Returns Type Description System.Single Value of the face feature Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetFaceFeature(UInt32) Get a face feature of the player. Declaration float GetFaceFeature(uint id) Parameters Type Name Description System.UInt32 id Slot of the face feature Returns Type Description System.Single Value of the face feature Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetHeadOverlay(Int32) Get the head overlay of the player. Declaration HeadOverlayData GetHeadOverlay(int overlayId) Parameters Type Name Description System.Int32 overlayId Slot of the head overlay Returns Type Description HeadOverlayData Value of the HeadOverlayData Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetHeadOverlay(UInt32) Get the head overlay of the player. Declaration HeadOverlayData GetHeadOverlay(uint overlayId) Parameters Type Name Description System.UInt32 overlayId Slot of the head overlay Returns Type Description HeadOverlayData Value of the HeadOverlayData Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetProp(PropSlot) Get prop of the player at given slot. Declaration PropData GetProp(PropSlot slot) Parameters Type Name Description PropSlot slot Slot of the prop Returns Type Description PropData PropSlot of the player Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetProp(Int32) Get prop of the player at given slot. Declaration PropData GetProp(int slot) Parameters Type Name Description System.Int32 slot Slot of the prop Returns Type Description PropData PropSlot of the player Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetStreamedPlayersAsync() Get all streamed players of the player. Declaration Task<IReadOnlyCollection<IPlayer>> GetStreamedPlayersAsync() Returns Type Description Task < IReadOnlyCollection < IPlayer >> Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetVoiceListenersAsync() Get the current list of players that can hear this current player. Declaration Task<IReadOnlyCollection<IPlayer>> GetVoiceListenersAsync() Returns Type Description Task < IReadOnlyCollection < IPlayer >> Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetWeaponAmmo(WeaponHash) Get the ammo of given weapon. Declaration uint GetWeaponAmmo(WeaponHash weapon) Parameters Type Name Description WeaponHash weapon Weapon to get the ammo for Returns Type Description System.UInt32 Ammo of the weapon Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetWeaponAmmo(Int32) Get the ammo of given weapon. Declaration int GetWeaponAmmo(int weapon) Parameters Type Name Description System.Int32 weapon Weapon to get the ammo for Returns Type Description System.Int32 Ammo of the weapon Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetWeaponAmmo(UInt32) Get the ammo of given weapon. Declaration uint GetWeaponAmmo(uint weapon) Parameters Type Name Description System.UInt32 weapon Weapon to get the ammo for Returns Type Description System.UInt32 Ammo of the weapon Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GetWeaponsAsync() Get all weapons of the player. Declaration Task<IReadOnlyDictionary<WeaponHash, uint>> GetWeaponsAsync() Returns Type Description Task < IReadOnlyDictionary < WeaponHash , System.UInt32 >> Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GiveWeapon(WeaponHash, Int32) Give a weapon to the player. Declaration void GiveWeapon(WeaponHash weapon, int ammo) Parameters Type Name Description WeaponHash weapon Weapon to give the player System.Int32 ammo Ammo of the given weapon Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GiveWeapon(WeaponHash, UInt32) Give a weapon to the player. Declaration void GiveWeapon(WeaponHash weapon, uint ammo) Parameters Type Name Description WeaponHash weapon Weapon to give the player System.UInt32 ammo Ammo of the given weapon Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GiveWeapon(Int32, Int32) Give a weapon to the player. Declaration void GiveWeapon(int weapon, int ammo) Parameters Type Name Description System.Int32 weapon Weapon to give the player System.Int32 ammo Ammo of the given weapon Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GiveWeapon(UInt32, UInt32) Give a weapon to the player. Declaration void GiveWeapon(uint weapon, uint ammo) Parameters Type Name Description System.UInt32 weapon Weapon to give the player System.UInt32 ammo Ammo of the given weapon Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GiveWeapons(IDictionary<WeaponHash, Int32>) Give multiple weapons to the player. Declaration void GiveWeapons(IDictionary<WeaponHash, int> weapons) Parameters Type Name Description IDictionary < WeaponHash , System.Int32 > weapons Key value set of weapons with ammo Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GiveWeapons(IDictionary<WeaponHash, UInt32>) Give multiple weapons to the player. Declaration void GiveWeapons(IDictionary<WeaponHash, uint> weapons) Parameters Type Name Description IDictionary < WeaponHash , System.UInt32 > weapons Key value set of weapons with ammo Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GiveWeapons(IDictionary<Int32, Int32>) Give multiple weapons to the player. Declaration void GiveWeapons(IDictionary<int, int> weapons) Parameters Type Name Description IDictionary < System.Int32 , System.Int32 > weapons Key value set of weapons with ammo Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source GiveWeapons(IDictionary<UInt32, UInt32>) Give multiple weapons to the player. Declaration void GiveWeapons(IDictionary<uint, uint> weapons) Parameters Type Name Description IDictionary < System.UInt32 , System.UInt32 > weapons Key value set of weapons with ammo Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source InvokeAsync(UInt64, IEnumerable<Object>) Call a native hash on the player. Declaration Task InvokeAsync(ulong nativeHash, IEnumerable<object> arguments) Parameters Type Name Description System.UInt64 nativeHash Hash of the native IEnumerable < System.Object > arguments Arguments of the native Returns Type Description Task Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source InvokeAsync(UInt64, Object[]) Call a native hash on the player. Declaration Task InvokeAsync(ulong nativeHash, params object[] arguments) Parameters Type Name Description System.UInt64 nativeHash Hash of the native System.Object [] arguments Arguments of the native Returns Type Description Task Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source IsStreamed(IPlayer) Check if given player is streamed. Declaration bool IsStreamed(IPlayer player) Parameters Type Name Description IPlayer player Player to check Returns Type Description System.Boolean True if the player is streamed, otherwise false Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source KickAsync(String) Kick the player. Declaration Task KickAsync(string reason = null) Parameters Type Name Description System.String reason Reason the player is kicked Returns Type Description Task Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source NotifyAsync(String) Send notification to the player. Declaration Task NotifyAsync(string text) Parameters Type Name Description System.String text Message to show in the notification Returns Type Description Task Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source OutputChatBoxAsync(String) Send chat message to the player. Declaration Task OutputChatBoxAsync(string text) Parameters Type Name Description System.String text Message to send to the player Returns Type Description Task Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source PlayAnimation(String, String, Single, AnimationFlags) Play an animation on the player. Declaration void PlayAnimation(string dictionary, string name, float speed = 8F, AnimationFlags flags = default(AnimationFlags)) Parameters Type Name Description System.String dictionary Dictionary name of the animation System.String name Name of the animation System.Single speed Speed of the animation AnimationFlags flags Flags of the animation Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source PlayScenario(String) Play a scenario on the player. Declaration void PlayScenario(string scenario) Parameters Type Name Description System.String scenario Name of the scenario Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source PutIntoVehicle(IVehicle, Int32) Place player in given vehicle. Declaration void PutIntoVehicle(IVehicle vehicle, int seat) Parameters Type Name Description IVehicle vehicle Vehicle to put the player into System.Int32 seat Seat the put the player on Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source RemoveAllWeapons() Remove all weapons from the player. Declaration void RemoveAllWeapons() Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source RemoveDecoration(Int32, Int32) Remove a decoration of the player. Declaration void RemoveDecoration(int collection, int overlay) Parameters Type Name Description System.Int32 collection Collection of the decoration System.Int32 overlay Overlay value of the decoration Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source RemoveDecoration(UInt32, UInt32) Remove a decoration of the player. Declaration void RemoveDecoration(uint collection, uint overlay) Parameters Type Name Description System.UInt32 collection Collection of the decoration System.UInt32 overlay Overlay value of the decoration Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source RemoveFromVehicle() Remove the player from any vehicle. Declaration void RemoveFromVehicle() Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source RemoveObject(Int32, Vector3, Single) Remove object from the player. Declaration void RemoveObject(int model, Vector3 position, float radius) Parameters Type Name Description System.Int32 model Model of the object Vector3 position Position to search object in System.Single radius Radius to search object in Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source RemoveObject(UInt32, Vector3, Single) Remove object from the player. Declaration void RemoveObject(uint model, Vector3 position, float radius) Parameters Type Name Description System.UInt32 model Model of the object Vector3 position Position to search object in System.Single radius Radius to search object in Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source RemoveWeapon(WeaponHash) Remove a weapon from the player. Declaration void RemoveWeapon(WeaponHash weapon) Parameters Type Name Description WeaponHash weapon Weapon to remove Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source RemoveWeapon(Int32) Remove a weapon from the player. Declaration void RemoveWeapon(int weapon) Parameters Type Name Description System.Int32 weapon Weapon to remove Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source RemoveWeapon(UInt32) Remove a weapon from the player. Declaration void RemoveWeapon(uint weapon) Parameters Type Name Description System.UInt32 weapon Weapon to remove Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source RemoveWeapons(IEnumerable<WeaponHash>) Remove multiple weapons from the player. Declaration void RemoveWeapons(IEnumerable<WeaponHash> weapons) Parameters Type Name Description IEnumerable < WeaponHash > weapons Weapons to remove Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source RemoveWeapons(IEnumerable<Int32>) Remove multiple weapons from the player. Declaration void RemoveWeapons(IEnumerable<int> weapons) Parameters Type Name Description IEnumerable < System.Int32 > weapons Weapons to remove Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source RemoveWeapons(IEnumerable<UInt32>) Remove multiple weapons from the player. Declaration void RemoveWeapons(IEnumerable<uint> weapons) Parameters Type Name Description IEnumerable < System.UInt32 > weapons Weapons to remove Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetCloth(ClothSlot, ClothData) Set cloth of the player at given slot. Declaration void SetCloth(ClothSlot slot, ClothData data) Parameters Type Name Description ClothSlot slot Slot of the cloth ClothData data Value of the slot Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetCloth(ClothSlot, Byte, Byte, Byte) Set cloth of the player at given slot. Declaration void SetCloth(ClothSlot slot, byte drawable, byte texture, byte palette) Parameters Type Name Description ClothSlot slot Slot of the cloth System.Byte drawable Drawable value of the cloth System.Byte texture Texture value of the cloth System.Byte palette Palette value of the cloth Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetClothes(IDictionary<ClothSlot, ClothData>) Set multiple clothes of the player. Declaration void SetClothes(IDictionary<ClothSlot, ClothData> clothes) Parameters Type Name Description IDictionary < ClothSlot , ClothData > clothes Clothes to set on the player Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetCustomization(Boolean, HeadBlendData, Int32, Int32, Int32, Single[], IDictionary<Int32, HeadOverlayData>, IDictionary<Int32, Int32>) Customize the player. Declaration void SetCustomization(bool isMale, HeadBlendData headBlend, int eyeColor, int hairColor, int highlightColor, float[] faceFeatures, IDictionary<int, HeadOverlayData> headOverlays, IDictionary<int, int> decorations) Parameters Type Name Description System.Boolean isMale Male if true, otherwise female HeadBlendData headBlend Head blend of the player System.Int32 eyeColor Eye color of the player System.Int32 hairColor Hair color of the player System.Int32 highlightColor Hair highlight color of the player System.Single [] faceFeatures Face features of the player IDictionary < System.Int32 , HeadOverlayData > headOverlays Head overlays of the player IDictionary < System.Int32 , System.Int32 > decorations Decorations of the player Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetCustomization(Boolean, HeadBlendData, UInt32, UInt32, UInt32, Single[], IDictionary<Int32, HeadOverlayData>, IDictionary<UInt32, UInt32>) Customize the player. Declaration void SetCustomization(bool isMale, HeadBlendData headBlend, uint eyeColor, uint hairColor, uint highlightColor, float[] faceFeatures, IDictionary<int, HeadOverlayData> headOverlays, IDictionary<uint, uint> decorations) Parameters Type Name Description System.Boolean isMale Male if true, otherwise female HeadBlendData headBlend Head blend of the player System.UInt32 eyeColor Eye color of the player System.UInt32 hairColor Hair color of the player System.UInt32 highlightColor Hair highlight color of the player System.Single [] faceFeatures Face features of the player IDictionary < System.Int32 , HeadOverlayData > headOverlays Head overlays of the player IDictionary < System.UInt32 , System.UInt32 > decorations Decorations of the player Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetDecoration(Int32, Int32) Set a decoration on the player. Declaration void SetDecoration(int collection, int overlay) Parameters Type Name Description System.Int32 collection Collection of the decoration System.Int32 overlay Overlay value of the decoration Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetDecoration(UInt32, UInt32) Set a decoration on the player. Declaration void SetDecoration(uint collection, uint overlay) Parameters Type Name Description System.UInt32 collection Collection of the decoration System.UInt32 overlay Overlay value of the decoration Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetDecorations(IDictionary<Int32, Int32>) Set multiple decorations on the player. Declaration void SetDecorations(IDictionary<int, int> decorations) Parameters Type Name Description IDictionary < System.Int32 , System.Int32 > decorations Decorations to set on the player Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetDecorations(IDictionary<UInt32, UInt32>) Set multiple decorations on the player. Declaration void SetDecorations(IDictionary<uint, uint> decorations) Parameters Type Name Description IDictionary < System.UInt32 , System.UInt32 > decorations Decorations to set on the player Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetFaceFeature(Int32, Single) Set a face feature on the player. Declaration void SetFaceFeature(int id, float scale) Parameters Type Name Description System.Int32 id Slot of the face feature System.Single scale Value of the face feature Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetFaceFeature(UInt32, Single) Set a face feature on the player. Declaration void SetFaceFeature(uint id, float scale) Parameters Type Name Description System.UInt32 id Slot of the face feature System.Single scale Value of the face feature Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetHairColor(Int32, Int32) Set the hair color of the player. Declaration void SetHairColor(int color, int highlightColor) Parameters Type Name Description System.Int32 color Color of the hair System.Int32 highlightColor Highlight color of the hair Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetHairColor(UInt32, UInt32) Set the hair color of the player. Declaration void SetHairColor(uint color, uint highlightColor) Parameters Type Name Description System.UInt32 color Color of the hair System.UInt32 highlightColor Highlight color of the hair Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetHeadOverlay(Int32, HeadOverlayData) Set the head overlay of the player. Declaration void SetHeadOverlay(int overlayId, HeadOverlayData overlayData) Parameters Type Name Description System.Int32 overlayId Slot of the head overlay HeadOverlayData overlayData Value of the head overlay Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetHeadOverlay(UInt32, HeadOverlayData) Set the head overlay of the player. Declaration void SetHeadOverlay(uint overlayId, HeadOverlayData overlayData) Parameters Type Name Description System.UInt32 overlayId Slot of the head overlay HeadOverlayData overlayData Value of the head overlay Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetProp(PropSlot, PropData) Set prop of the player at given slot. Declaration void SetProp(PropSlot slot, PropData data) Parameters Type Name Description PropSlot slot Slot of the prop PropData data Value of the prop Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetProp(PropSlot, Byte, Byte) Set prop of the player at given slot. Declaration void SetProp(PropSlot slot, byte drawable, byte texture) Parameters Type Name Description PropSlot slot Slot of the prop System.Byte drawable Drawable value of the prop System.Byte texture Texture value of the prop Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetProps(IDictionary<PropSlot, PropData>) Set multiple props of the player. Declaration void SetProps(IDictionary<PropSlot, PropData> props) Parameters Type Name Description IDictionary < PropSlot , PropData > props Props to set on the player Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetWeaponAmmo(WeaponHash, Int32) Set the ammo of given weapon. Declaration void SetWeaponAmmo(WeaponHash weapon, int ammo) Parameters Type Name Description WeaponHash weapon Weapon to set the ammo for System.Int32 ammo Ammo for the weapon Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetWeaponAmmo(WeaponHash, UInt32) Set the ammo of given weapon. Declaration void SetWeaponAmmo(WeaponHash weapon, uint ammo) Parameters Type Name Description WeaponHash weapon Weapon to set the ammo for System.UInt32 ammo Ammo for the weapon Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetWeaponAmmo(Int32, Int32) Set the ammo of given weapon. Declaration void SetWeaponAmmo(int weapon, int ammo) Parameters Type Name Description System.Int32 weapon Weapon to set the ammo for System.Int32 ammo Ammo for the weapon Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source SetWeaponAmmo(UInt32, UInt32) Set the ammo of given weapon. Declaration void SetWeaponAmmo(uint weapon, uint ammo) Parameters Type Name Description System.UInt32 weapon Weapon to set the ammo for System.UInt32 ammo Ammo for the weapon Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Spawn(Vector3, Single) Spawn the player at given position. Declaration void Spawn(Vector3 position, float heading) Parameters Type Name Description Vector3 position Position to spawn the player at System.Single heading Heading to spawn the player with Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source StopAnimation() Stop playing any animation on the player. Declaration void StopAnimation() Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source UpdateHeadBlend(Single, Single, Single) Update the head blend of the player. Declaration void UpdateHeadBlend(float shapeMix, float skinMix, float thirdMix) Parameters Type Name Description System.Single shapeMix Shape mix of the head blend System.Single skinMix Skin mix of the head blend System.Single thirdMix Third mix of the head blend Exceptions Type Condition EntityDeletedException This entity was deleted before"
  },
  "api/AlternateLife.RageMP.Net.Interfaces.IEventScripting.html": {
    "href": "api/AlternateLife.RageMP.Net.Interfaces.IEventScripting.html",
    "title": "Interface IEventScripting",
    "keywords": "Interface IEventScripting Namespace : AlternateLife.RageMP.Net.Interfaces Assembly : AlternateLife.RageMP.Net.dll Syntax public interface IEventScripting Methods | Improve this Doc View Source Add(String, PlayerRemoteEventDelegate) Add a client event callback. The callback is called when a player sends a client event with the given eventName . Declaration void Add(string eventName, PlayerRemoteEventDelegate callback) Parameters Type Name Description System.String eventName Name of the event PlayerRemoteEventDelegate callback Callback to execute on the event Events | Improve this Doc View Source PlayerChat Declaration event PlayerChatDelegate PlayerChat Event Type Type Description PlayerChatDelegate | Improve this Doc View Source PlayerCommand Declaration event PlayerCommandDelegate PlayerCommand Event Type Type Description PlayerCommandDelegate | Improve this Doc View Source PlayerCreateWaypoint Declaration event PlayerCreateWaypointDelegate PlayerCreateWaypoint Event Type Type Description PlayerCreateWaypointDelegate | Improve this Doc View Source PlayerDamage Declaration event PlayerDamageDelegate PlayerDamage Event Type Type Description PlayerDamageDelegate | Improve this Doc View Source PlayerDeath Declaration event PlayerDeathDelegate PlayerDeath Event Type Type Description PlayerDeathDelegate | Improve this Doc View Source PlayerEnterCheckpoint Declaration event PlayerEnterCheckpointDelegate PlayerEnterCheckpoint Event Type Type Description PlayerEnterCheckpointDelegate | Improve this Doc View Source PlayerEnterColshape Declaration event PlayerEnterColshapeDelegate PlayerEnterColshape Event Type Type Description PlayerEnterColshapeDelegate | Improve this Doc View Source PlayerEnterVehicle Declaration event PlayerEnterVehicleDelegate PlayerEnterVehicle Event Type Type Description PlayerEnterVehicleDelegate | Improve this Doc View Source PlayerExitCheckpoint Declaration event PlayerExitCheckpointDelegate PlayerExitCheckpoint Event Type Type Description PlayerExitCheckpointDelegate | Improve this Doc View Source PlayerExitColshape Declaration event PlayerExitColshapeDelegate PlayerExitColshape Event Type Type Description PlayerExitColshapeDelegate | Improve this Doc View Source PlayerExitVehicle Declaration event PlayerExitVehicleDelegate PlayerExitVehicle Event Type Type Description PlayerExitVehicleDelegate | Improve this Doc View Source PlayerJoin Declaration event PlayerJoinDelegate PlayerJoin Event Type Type Description PlayerJoinDelegate | Improve this Doc View Source PlayerQuit Declaration event PlayerQuitDelegate PlayerQuit Event Type Type Description PlayerQuitDelegate | Improve this Doc View Source PlayerReachWaypoint Declaration event PlayerReachWaypointDelegate PlayerReachWaypoint Event Type Type Description PlayerReachWaypointDelegate | Improve this Doc View Source PlayerReady Declaration event PlayerReadyDelegate PlayerReady Event Type Type Description PlayerReadyDelegate | Improve this Doc View Source PlayerSpawn Declaration event PlayerSpawnDelegate PlayerSpawn Event Type Type Description PlayerSpawnDelegate | Improve this Doc View Source PlayerStartEnterVehicle Declaration event PlayerStartEnterVehicleDelegate PlayerStartEnterVehicle Event Type Type Description PlayerStartEnterVehicleDelegate | Improve this Doc View Source PlayerStartExitVehicle Declaration event PlayerStartExitVehicleDelegate PlayerStartExitVehicle Event Type Type Description PlayerStartExitVehicleDelegate | Improve this Doc View Source PlayerStreamIn Declaration event PlayerStreamInDelegate PlayerStreamIn Event Type Type Description PlayerStreamInDelegate | Improve this Doc View Source PlayerStreamOut Declaration event PlayerStreamOutDelegate PlayerStreamOut Event Type Type Description PlayerStreamOutDelegate | Improve this Doc View Source PlayerWeaponChange Declaration event PlayerWeaponChangeDelegate PlayerWeaponChange Event Type Type Description PlayerWeaponChangeDelegate | Improve this Doc View Source Tick Declaration event TickDelegate Tick Event Type Type Description TickDelegate | Improve this Doc View Source VehicleDamage Declaration event VehicleDamageDelegate VehicleDamage Event Type Type Description VehicleDamageDelegate | Improve this Doc View Source VehicleDeath Declaration event VehicleDeathDelegate VehicleDeath Event Type Type Description VehicleDeathDelegate | Improve this Doc View Source VehicleHornToggle Declaration event VehicleHornToggleDelegate VehicleHornToggle Event Type Type Description VehicleHornToggleDelegate | Improve this Doc View Source VehicleSirenToggle Declaration event VehicleSirenToggleDelegate VehicleSirenToggle Event Type Type Description VehicleSirenToggleDelegate | Improve this Doc View Source VehicleTrailerAttached Declaration event VehicleTrailerAttachedDelegate VehicleTrailerAttached Event Type Type Description VehicleTrailerAttachedDelegate"
  },
  "api/AlternateLife.RageMP.Net.Interfaces.IBlip.html": {
    "href": "api/AlternateLife.RageMP.Net.Interfaces.IBlip.html",
    "title": "Interface IBlip",
    "keywords": "Interface IBlip Inherited Members IEntity.NativePointer IEntity.Exists IEntity.Id IEntity.Type IEntity.Model IEntity.Alpha IEntity.Dimension IEntity.Position IEntity.Velocity IEntity.Destroy() IEntity.TryGetSharedData(String, Object) IEntity.SetSharedData(String, Object) IEntity.SetSharedData(IDictionary<String, Object>) IEntity.HasSharedData(String) IEntity.ResetSharedData(String) IEntity.TryGetData(String, Object) IEntity.SetData(String, Object) IEntity.SetData(IDictionary<String, Object>) IEntity.HasData(String) IEntity.ResetData(String) IEntity.ClearData() Namespace : AlternateLife.RageMP.Net.Interfaces Assembly : AlternateLife.RageMP.Net.dll Syntax public interface IBlip : IEntity Properties | Improve this Doc View Source Color Get or set color of the blip. Declaration uint Color { get; set; } Property Value Type Description System.UInt32 Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source DrawDistance Get or set draw distance of the blip. Declaration float DrawDistance { get; set; } Property Value Type Description System.Single Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Name Get or set name of the blip. Declaration string Name { get; set; } Property Value Type Description System.String Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Rotation Get or set rotation of the blip. Declaration int Rotation { get; set; } Property Value Type Description System.Int32 Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source Scale Get or set scale of the blip. Declaration float Scale { get; set; } Property Value Type Description System.Single Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source ShortRange Get or set short range flag of the blip. Declaration bool ShortRange { get; set; } Property Value Type Description System.Boolean Exceptions Type Condition EntityDeletedException This entity was deleted before Methods | Improve this Doc View Source HideRoute(IEnumerable<IPlayer>) Hide route for a list of players. Declaration void HideRoute(IEnumerable<IPlayer> forPlayers) Parameters Type Name Description IEnumerable < IPlayer > forPlayers List of players to hide the route for Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source ShowRoute(IEnumerable<IPlayer>, Int32, Single) Show route for a list of players with given color and scale. The color and scale are used for the route, not the blip. Declaration void ShowRoute(IEnumerable<IPlayer> forPlayers, int color, float scale) Parameters Type Name Description IEnumerable < IPlayer > forPlayers List of players to show the route for System.Int32 color Color of the route System.Single scale Scale of the route Exceptions Type Condition EntityDeletedException This entity was deleted before | Improve this Doc View Source ShowRoute(IEnumerable<IPlayer>, UInt32, Single) Show route for a list of players with given color and scale. The color and scale are used for the route, not the blip. Declaration void ShowRoute(IEnumerable<IPlayer> forPlayers, uint color, float scale) Parameters Type Name Description IEnumerable < IPlayer > forPlayers List of players to show the route for System.UInt32 color Color of the route System.Single scale Scale of the route Exceptions Type Condition EntityDeletedException This entity was deleted before"
  },
  "api/AlternateLife.RageMP.Net.Enums.MaterialType.html": {
    "href": "api/AlternateLife.RageMP.Net.Enums.MaterialType.html",
    "title": "Enum MaterialType",
    "keywords": "Enum MaterialType Namespace : AlternateLife.RageMP.Net.Enums Assembly : AlternateLife.RageMP.Net.dll Syntax public enum MaterialType : int Fields Name Description Color Paint Rgb"
  },
  "api/AlternateLife.RageMP.Net.Enums.VehicleHash.html": {
    "href": "api/AlternateLife.RageMP.Net.Enums.VehicleHash.html",
    "title": "Enum VehicleHash",
    "keywords": "Enum VehicleHash Namespace : AlternateLife.RageMP.Net.Enums Assembly : AlternateLife.RageMP.Net.dll Syntax public enum VehicleHash : uint Fields Name Description Adder Airbus Airtug Akula Akuma Alpha AlphaZ1 Ambulance Annihilator Apc Ardent ArmyTanker ArmyTrailer ArmyTrailer2 Asea Asea2 Asterope Autarch Avarus Avenger Avenger2 Bagger BaleTrailer Baller Baller2 Baller3 Baller4 Baller5 Baller6 Banshee Banshee2 Barracks Barracks2 Barracks3 Barrage Bati Bati2 Benson Besra Bestiagts Bf400 BfInjection Biff Bifta Bison Bison2 Bison3 Bjxl Blade Blazer Blazer2 Blazer3 Blazer4 Blazer5 Blimp Blimp2 Blimp3 Blista Blista2 Blista3 Bmx BoatTrailer BobcatXl Bodhi2 Bombushka Boxville Boxville2 Boxville3 Boxville4 Boxville5 Brawler Brickade Brioso Bruiser Bruiser2 Bruiser3 Brutus Brutus2 Brutus3 BType BType2 BType3 Buccaneer Buccaneer2 Buffalo Buffalo2 Buffalo3 Bulldozer Bullet Burrito Burrito2 Burrito3 Burrito4 Burrito5 Bus Buzzard Buzzard2 CableCar Caddy Caddy2 Caddy3 Camper Caracara Carbonizzare CarbonRs Cargobob Cargobob2 Cargobob3 Cargobob4 CargoPlane Casco Cavalcade Cavalcade2 Cerberus Cerberus2 Cerberus3 Cheburek Cheetah Cheetah2 Chernobog Chimera Chino Chino2 Cliffhanger Clique Coach Cog55 Cog552 CogCabrio Cognoscenti Cognoscenti2 Comet2 Comet3 Comet4 Comet5 Contender Coquette Coquette2 Coquette3 Cruiser Crusader Cuban800 Cutter Cyclone Daemon Daemon2 Deathbike Deathbike2 Deathbike3 Defiler Deluxo Deveste Deviant Diablous Diablous2 Dilettante Dilettante2 Dinghy Dinghy2 Dinghy3 Dinghy4 DLoader DockTrailer Docktug Dodo Dominator Dominator2 Dominator3 Dominator4 Dominator5 Dominator6 Double Dubsta Dubsta2 Dubsta3 Dukes Dukes2 Dump Dune Dune2 Dune3 Dune4 Dune5 Duster Elegy Elegy2 Ellie Emperor Emperor2 Emperor3 Enduro Entity2 EntityXf Esskey Exemplar F620 Faction Faction2 Faction3 Fagaloa Faggio Faggio2 Faggio3 Fbi Fbi2 Fcr Fcr2 Felon Felon2 Feltzer2 Feltzer3 FireTruck Fixter FlashGt Flatbed Fmj Forklift Fq2 Freecrawler Freight FreightCar FreightCont1 FreightCont2 FreightGrain FreightTrailer Frogger Frogger2 Fugitive Furoregt Fusilade Futo Gargoyle Gauntlet Gauntlet2 Gb200 GBurrito GBurrito2 Glendale Gp1 GrainTrailer Granger Gresley Gt500 Guardian Habanero Hakuchou Hakuchou2 Halftrack Handler Hauler Hauler2 Havok Hermes Hexer Hotknife Hotring Howard Hunter Huntley Hustler Hydra Impaler Impaler2 Impaler3 Impaler4 Imperator Imperator2 Imperator3 Infernus Infernus2 Ingot Innovation Insurgent Insurgent2 Insurgent3 Intruder Issi2 Issi3 Issi4 Issi5 Issi6 Italigtb Italigtb2 ItaliGto Jackal Jb700 Jester Jester2 Jester3 Jet Jetmax Journey Kalahari Kamacho Khamelion Khanjali Kuruma Kuruma2 Landstalker Lazer Le7B Lectro Lguard Limo2 Lurcher Luxor Luxor2 Lynx Mamba Mammatus Manana Manchez Marquis Marshall Massacro Massacro2 Maverick Menacer Mesa Mesa2 Mesa3 Michelli Microlight Miljet Minivan Minivan2 Mixer Mixer2 Mogul Molotok Monroe Monster Monster3 Monster4 Monster5 Moonbeam Moonbeam2 Mower Mule Mule2 Mule3 Mule4 Nemesis Neon Nero Nero2 Nightblade Nightshade Nightshark Nimbus Ninef Ninef2 Nokota Omnis Oppressor Oppressor2 Oracle Oracle2 Osiris Packer Panto Paradise Pariah Patriot Patriot2 PBus PBus2 Pcj Penetrator Penumbra Peyote Pfister811 Phantom Phantom2 Phantom3 Phoenix Picador Pigalle Police Police2 Police3 Police4 Policeb PoliceOld1 PoliceOld2 PoliceT Polmav Pony Pony2 Pounder Pounder2 Prairie Pranger Predator Premier Primo Primo2 PropTrailer Prototipo Pyro Radi Raiden RakeTrailer Rallytruck RancherXl RancherXl2 RapidGt RapidGt2 RapidGt3 Raptor Ratbike RatLoader RatLoader2 RcBandito Reaper Rebel Rebel2 Regina RentalBus Retinue Revolter Rhapsody Rhino Riata Riot Riot2 Ripley Rocoto Rogue Romero Rubble Ruffian Ruiner Ruiner2 Rumpo Rumpo2 Rumpo3 Ruston SabreGt SabreGt2 Sadler Sadler2 Sanchez Sanchez2 Sanctus Sandking Sandking2 Savage Savestra Sc1 Scarab Scarab2 Scarab3 Schafter2 Schafter3 Schafter4 Schafter5 Schafter6 Schlagen Schwarzer Scorcher Scramjet Scrap Seabreeze Seashark Seashark2 Seashark3 Seasparrow Seminole Sentinel Sentinel2 Sentinel3 Serrano Seven70 Shamal Sheava Sheriff Sheriff2 Shotaro Skylift SlamVan SlamVan2 SlamVan3 SlamVan4 SlamVan5 SlamVan6 Sovereign Specter Specter2 Speeder Speeder2 Speedo Speedo2 Speedo4 Squalo Stafford Stalion Stalion2 Stanier Starling Stinger StingerGt Stockade Stockade3 Stratum Streiter Stretch Strikeforce Stromberg Stunt Submersible Submersible2 Sultan SultanRs Suntrap Superd Supervolito Supervolito2 Surano Surfer Surfer2 Surge Swift Swift2 Swinger T20 Taco Tailgater Taipan Tampa Tampa2 Tampa3 Tanker Tanker2 TankerCar Taxi Technical Technical2 Technical3 Tempesta Terabyte Tezeract Thrust Thruster TipTruck TipTruck2 Titan Torero Tornado Tornado2 Tornado3 Tornado4 Tornado5 Tornado6 Toro Toro2 Toros Tourbus TowTruck TowTruck2 Tr2 Tr3 Tr4 Tractor Tractor2 Tractor3 TrailerLarge TrailerLogs Trailers Trailers2 Trailers3 Trailers4 TrailerSmall TrailerSmall2 Trash Trash2 TrFlat TriBike TriBike2 TriBike3 Trophytruck Trophytruck2 Tropic Tropic2 Tropos Tug Tula Tulip Turismo2 Turismor TvTrailer Tyrant Tyrus UtilliTruck UtilliTruck2 UtilliTruck3 Vacca Vader Vagner Valkyrie Valkyrie2 Vamos Velum Velum2 Verlierer2 Vestra Vigero Vigilante Vindicator Virgo Virgo2 Virgo3 Viseris Visione Volatol Volatus Voltic Voltic2 Voodoo Voodoo2 Vortex Warrener Washington Wastlndr Windsor Windsor2 Wolfsbane Xa21 Xls Xls2 Yosemite Youga Youga2 Z190 Zentorno Zion Zion2 Zombiea Zombieb Zr380 Zr3802 Zr3803 Ztype"
  }
}